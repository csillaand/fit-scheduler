{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/navigation-bar/navigation-bar.component.ts","./src/app/components/navigation-bar/navigation-bar.component.html","./src/app/config/auth.config.ts","./src/app/config/i18n.config.ts","./src/app/interceptors/auth-interceptor.ts","./src/app/models/paginated_view.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/login-success/login-success.component.ts","./src/app/modules/contracts/_models/DTOs.ts","./src/app/modules/contracts/_models/constants.ts","./src/app/modules/contracts/_services/contract-client.service.ts","./src/app/modules/contracts/_services/contract-store.service.ts","./src/app/modules/contracts/add-contract/add-contract.component.ts","./src/app/modules/contracts/add-contract/add-contract.component.html","./src/app/modules/contracts/contract-filters/contract-filters.component.ts","./src/app/modules/contracts/contract-filters/contract-filters.component.html","./src/app/modules/contracts/contract-form/contract-form.component.ts","./src/app/modules/contracts/contract-form/contract-form.component.html","./src/app/modules/contracts/contracts-list/contracts-list.component.ts","./src/app/modules/contracts/contracts-list/contracts-list.component.html","./src/app/modules/contracts/contracts.module.ts","./src/app/modules/contracts/update-contract/update-contract.component.ts","./src/app/modules/contracts/update-contract/update-contract.component.html","./src/app/modules/dashboard/dashboard.module.ts","./src/app/modules/dashboard/homepage/homepage.component.ts","./src/app/modules/dashboard/homepage/homepage.component.html","./src/app/modules/icons/icons.module.ts","./src/app/modules/invoices/_services/invoice-client.service.ts","./src/app/modules/invoices/_services/invoice-store.service.ts","./src/app/modules/invoices/invoices-list/invoices-list.component.html","./src/app/modules/invoices/invoices-list/invoices-list.component.ts","./src/app/modules/partners/_services/partners-client.service.ts","./src/app/modules/projects/_services/projects-client.service.ts","./src/app/modules/shared/_directives/modal.component.ts","./src/app/modules/shared/_models/query-string.ts","./src/app/modules/shared/_services/form-submitted.service.ts","./src/app/modules/shared/_services/validators.ts","./src/app/modules/shared/form-errors/form-errors.component.ts","./src/app/modules/shared/form-errors/form-errors.component.html","./src/app/modules/shared/modal/modal.component.html","./src/app/modules/shared/modal/modal.component.ts","./src/app/modules/shared/pagination/_model/pagination.ts","./src/app/modules/shared/pagination/pagination.component.ts","./src/app/modules/shared/pagination/pagination.component.html","./src/app/modules/shared/search-filter/search-filter.component.ts","./src/app/modules/shared/search-filter/search-filter.component.html","./src/app/modules/shared/shared.module.ts","./src/app/services/authorization.ts","./src/app/services/factories.ts","./src/app/services/guard/is-authenticated.guard.ts","./src/environments/environment.local.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;;;;;;;;;;ACZuE;AAEhB;AACC;AACgC;AACa;AAC9B;AACa;AACL;AACkB;;;AAEjG,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,iGAAgB,EAAE;IACtD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6FAAiB,EAAE;IAC1C;QACI,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8GAAsB;QACjC,WAAW,EAAE,CAAC,wFAAoB,CAAC;KACtC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,0GAAqB;QAChC,WAAW,EAAE,CAAC,wFAAoB,CAAC;KACtC;CACJ,CAAC;AAWK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHARhB;YACL,iEAAU;YACV,gFAAe;YACf,gFAAe;YACf,iEAAoB,CAAC,MAAM,CAAC;SAC/B,EACS,yDAAY;mIAEb,gBAAgB,cAPrB,iEAAU;QACV,gFAAe;QACf,gFAAe,wEAGT,yDAAY;;;;;;;;;;;;;;;;;;;;;;AC1BnB,MAAM,YAAY;;wEAAZ,YAAY;0GAAZ,YAAY;QCPzB,gFAAyC;QACzC,yEAAsC;QAClC,2EAA+B;QACnC,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACH4D;AACK;AACnB;AACM;AACJ;AAEE;AACT;AAC+C;AACvC;AACI;AACgB;AACQ;AAC3B;AACQ;AACP;AACC;AACR;AACG;AACgB;AAC4B;;;;AAEjG,oEAAkB,CAAC,oEAAQ,CAAC,CAAC;AA4BtB,MAAM,SAAS;;kEAAT,SAAS;uGAAT,SAAS,cAJN,wDAAY;4GALb;QACP,EAAE,OAAO,EAAE,oEAAiB,EAAE,QAAQ,EAAE,2EAAe,EAAE,KAAK,EAAE,IAAI,EAAE;QACtE,EAAE,OAAO,EAAE,qDAAS,EAAE,QAAQ,EAAE,gFAAyB,EAAE;QAC3D,EAAE,OAAO,EAAE,iFAA+B,EAAE,QAAQ,EAAE,+EAAyB,EAAE;KACpF,YAfQ;YACL,qEAAa;YACb,iEAAgB;YAChB,kEAAS;YACT,oEAAW;YACX,mEAAgB;YAChB,iEAAU;YACV,qEAAmB,CAAC,kEAAiB,CAAC;YACtC,yEAAuB,CAAC,yEAAwB,CAAC;YACjD,gFAAe;SAClB;oIAUQ,SAAS,mBAxBd,wDAAY;QACZ,uGAAsB;QACtB,2GAAqB,aAGrB,qEAAa;QACb,iEAAgB;QAChB,kEAAS;QACT,oEAAW;QACX,mEAAgB;QAChB,iEAAU,oIAGV,gFAAe;;;;;;;;;;;;;;;;;;;;;;;;ACrCvB;;;;;;;;;;;;;;;;;ACOM;AACE;AACE;AAAuC;AAAA;AAAA;AAAA,sCAA2B,IAA3B;AAA+B,KAA/B;AACrC;;AACF;AACF;AACA;AACE;AAAuC;AAAA;AAAA;AAAA,sCAA2B,IAA3B;AAA+B,KAA/B;AACrC;;AACF;AACF;AACA;AACE;AAAgD;AAAA;AAAA;AAAA,sCAA2B,IAA3B;AAA+B,KAA/B;AAC9C;;AACF;AACF;AACA;AACE;AAA+C;AAAA;AAAA;AAAA,sCAA2B,IAA3B;AAA+B,KAA/B;AAC7C;;AACF;AACF;AACA;AACE;AAAuC;AAAA;AAAA;AAAA,sCAA2B,IAA3B;AAA+B,KAA/B;AACrC;;AACF;AACF;AACA;AACE;AAAuC;AAAA;AAAA;AAAA,sCAA2B,IAA3B;AAA+B,KAA/B;AACrC;;AACF;AACF;AACA;AACE;AAAuC;AAAA;AAAA;AAAA,uCAA2B,IAA3B;AAA+B,KAA/B;AACrC;;AACF;AACF;AACA;AACE;AAAuC;AAAA;AAAA;AAAA,uCAA2B,IAA3B;AAA+B,KAA/B;AACrC;AACF;AACF;AACA;AACE;AAAQ;AAAA;AAAA;AAAA;AAAA;AAAsD;;AAAiC;AACjG;AACF;;;;AA1CwB;AAAA;AAClB;AAAA;AAIkB;AAAA;AAClB;AAAA;AAIkB;AAAA;AAClB;AAAA;AAIkB;AAAA;AAClB;AAAA;AAIkB;AAAA;AAClB;AAAA;AAIkB;AAAA;AAClB;AAAA;AAIkB;AAAA;AAClB;AAAA;AAIkB;AAAA;AACT;AAAA;AAImD;AAAA;;;;;;;;AAOtE;AACE;AAAQ;AAAA;AAAA;AAAA;AAAA;AAAqD;;AAAgC;AAC/F;;;;AAD+D;AAAA;;;;ADjD3D,MAAO,sBAAP,CAA6B;AAK/B,cAAoB,oBAApB,EAA8D;AAA1C;AAHb,2BAAkB,IAAlB;AAKH,SAAK,eAAL,GAAuB,KAAK,oBAAL,CAClB,wBADkB,CACO,IADP,CACY,qDAAK,EADjB,CAAvB;AAEH;;AAED,OAAK;AAED,SAAK,oBAAL,CAA0B,KAA1B;AACH;;AAED,QAAM;AAEF,SAAK,oBAAL,CAA0B,MAA1B;AACH;;AAnB8B;;;mBAAtB,sB,EAAsB,0I;AAAA,C;;;QAAtB,sB;AAAsB,qC;AAAA,W;AAAA,S;AAAA,gjB;AAAA;AAAA;ACVnC;AACE;AAA2C;AAAkE;AAE7G;AAA6C;AAAA;AAAA;AAC3C;AACF;AAEA;AACE;AACE;;AA6CF;AACF;AACF;AACA;;;;;;AAxD0B;AAAA;AAMnB;AAAA;AAEc;AAAA,6JAA8B,UAA9B,EAA8B,GAA9B;;;;;;;;;;;;;;;;;;;;;;;ACRwC;AAE7D,MAAM,uBAAuB,GAAG,gFAAyB,GAAG,QAAQ,CAAC;AAE9D,MAAM,kBAAkB,GAAe;IAC1C,MAAM,EAAE,uBAAuB;IAC/B,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,gBAAgB;IACtD,QAAQ,EAAE,QAAQ;IAClB,YAAY,EAAE,MAAM;IACpB,KAAK,EAAE,uBAAuB;IAC9B,oBAAoB,EAAE,IAAI;IAC1B,aAAa,EAAE,IAAI;IACnB,oBAAoB,EAAE,IAAI;IAC1B,qBAAqB,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,iBAAiB;CACpE,CAAC;AAEK,MAAM,iBAAiB,GAAsB;IAChD,cAAc,EAAE;QACZ,eAAe,EAAE,IAAI;KACxB;CACJ,CAAC;;;;;;;;;;;;;;;;;;;;ACpBoD;AACI;AACR;AACW;AAEtD,MAAM,wBAAwB,GAA0B;IAC3D,MAAM,EAAE;QACJ,OAAO,EAAE,gEAAe;QACxB,UAAU,EAAE,kEAAiB;QAC7B,IAAI,EAAE,CAAC,4DAAU,CAAC;KACrB;IACD,eAAe,EAAE,kFAA2B;CAC/C;;;;;;;;;;;;;;;;;;;;;ACXmD;AACR;;;AAIrC,MAAM,eAAe;IAExB,YAAoB,WAAiC;QAAjC,gBAAW,GAAX,WAAW,CAAsB;IAErD,CAAC;IAED,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAE9C,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,EAAE,gBAAgB,EAAE,cAAc,EAAE,EAAE,CAAC,CAAC;QAEhF,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAU,CAAC,QAAQ,CAAC,EAAE;YACnD,OAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAEO,mBAAmB,CACvB,QAAkB,EAClB,OAAyB,EACzB,IAAiB;QAEjB,OAAO,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;YACxB,0CAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACxE,gDAAU,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;;8EAvBQ,eAAe;gHAAf,eAAe,WAAf,eAAe;;;;;;;;;;;;;;;;ACCrB,MAAM,kBAAkB,GAAuB;IAClD,KAAK,EAAE,CAAC;IACR,IAAI,EAAE,EAAE;IACR,QAAQ,EAAE,EAAE;IACZ,OAAO,EAAE,IAAI,KAAK,EAAO;CAC5B,CAAC;;;;;;;;;;;;;;;;;;;ACZ6C;AAC4B;;AAcpE,MAAM,UAAU;;oEAAV,UAAU;uGAAV,UAAU;2GAJV;YACL,yDAAY;SACf;mIAEQ,UAAU,mBATf,oFAAgB,aAMhB,yDAAY,aAHZ,oFAAgB;;;;;;;;;;;;;;;;;;;;ACRyC;;;;AAO1D,MAAM,gBAAgB;IAEzB,YAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAElE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,mEAAkB,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,6BAA6B,EAAE;aAC5C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC;;gFAPQ,gBAAgB;8GAAhB,gBAAgB;QAFd,qEAAI;QAAA,kEAAO;QAAA,4DAAK;;;;;;;;;;;;;;;;;;AC+DxB,MAAM,2BAA2B,GAA4B;IAChE,EAAE,EAAE,IAAI;IACR,MAAM,EAAE,EAAE;IACV,KAAK,EAAE,EAAE;IACT,kBAAkB,EAAE,IAAI;IACxB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE,EAAE;IAChB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE,EAAE;IAChB,YAAY,EAAE,EAAE;CACnB,CAAC;AAEK,MAAM,oBAAoB,GAAqB;IAClD,EAAE,EAAE,IAAI;IACR,KAAK,EAAE,EAAE;IACT,QAAQ,EAAE,IAAI;IACd,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,EAAE;IACZ,QAAQ,EAAE,IAAI;IACd,QAAQ,EAAE,IAAI;CACjB,CAAC;;;;;;;;;;;;;;;;;;AC1FK,MAAM,YAAY,GAAG,CAAC,iCAAiC,EAAE,iCAAiC,CAAC,CAAC;AAC5F,MAAM,cAAc,GAAG,CAAC,0BAA0B,EAAE,4BAA4B,CAAC,CAAC;AAClF,MAAM,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACFmC;AAEnC;AACM;AAEuC;;;AAS5E,MAAM,cAAc;IAIvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAFlC,kBAAa,GAAG,iFAAoB,GAAG,mBAAmB,CAAC;IAEtB,CAAC;IAEvC,IAAI,CAAC,KAA4B;QAEpC,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;QAC7B,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE;YACzB,IAAI,UAAU,GAAa,EAAE,CAAC;YAC9B,KAAK,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,cAAsB,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;YACrG,GAAG,IAAI,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA6B,GAAG,CAAC;aACtD,IAAI,CAAC,0DAAU,CAAC,CAAC,CAAC,EAAE,CAAC,wCAAE,CAAC,sEAAkB,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC;IAEM,MAAM,CAAC,GAA4B;QAEtC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAA0B,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;IAClF,CAAC;IAEM,MAAM,CACT,EAAU,EACV,GAA4B;QAE5B,OAAO,IAAI,CAAC,UAAU;aACjB,GAAG,CAA0B,IAAI,CAAC,aAAa,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1E,CAAC;IAEM,YAAY;QAEf,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC;QAEjD,OAAO,IAAI,CAAC,UAAU;aACjB,GAAG,CAAuC,GAAG,CAAC;aAC9C,IAAI,CAAC,0DAAU,CAAC,CAAC,CAAC,EAAE,CAAC,wCAAE,CAAC,sEAAkB,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC;;4EAtCQ,cAAc;+GAAd,cAAc,WAAd,cAAc,mBADD,MAAM;AA2CzB,MAAM,mBAAmB;IAI5B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAEvC,MAAM,CACT,GAAiC;QAEjC,OAAO,IAAI,CAAC,UAAU;aACjB,IAAI,CAA+B,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC;aACvE,SAAS,EAAE,CAAC;IACrB,CAAC;IAEM,MAAM,CACT,EAAU,EACV,GAAiC;QAEjC,OAAO,IAAI,CAAC,UAAU;aACjB,GAAG,CAA+B,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC;aAC1E,SAAS,EAAE,CAAC;IACrB,CAAC;IAEO,GAAG,CAAC,UAAkB,EAAE,eAAwB;QAEpD,IAAI,GAAG,GAAG,mBAAmB,CAAC,YAAY,GAAG,UAAU,GAAG,GAAG,CAAC;QAC9D,sCAAsC;QACtC,IAAI,eAAe,EAAE;YACjB,GAAG,IAAI,QAAQ,GAAG,eAAe,GAAG,GAAG,CAAC;SAC3C;aAAM;YACH,GAAG,IAAI,SAAS,CAAC;SACpB;QAED,OAAO,GAAG,CAAC;IACf,CAAC;;AAhCM,gCAAY,GAAG,iFAAoB,GAAG,mBAAmB,CAAC;sFAFxD,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB,mBADP,MAAM;;;;;;;;;;;;;;;;;;;;;ACvDoD;AAE1B;AAGpB;;;AAG9B,MAAM,aAAa;IAMtB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAJ1C,yBAAoB,GAAG,IAAI,yCAAO,EAA8B,CAAC;QACjE,UAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;QACjD,kBAAa,GAAmB,EAAE,CAAC;QAIvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,sEAAkB,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,IAAI,IAAI;QAEJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,MAAM,CAAC,GAA4B;QAEtC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,mDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACvE,CAAC;IAEM,MAAM,CACT,EAAU,EACV,GAA4B;QAE5B,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,mDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC3E,CAAC;IAEM,IAAI,CAAC,QAA+B,IAAI;QAE3C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC;aAClD,SAAS,CAAC,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAC5B,QAAQ,CAAC,aAAa,GAAG,QAAQ,CAAC,MAAM;qBACnC,GAAG,CAAC,CAAC,aAAa,EAAE,EAAE,WAAC,0BAAa,CAAC,SAAS,mCAAI,CAAC,IAAC;qBACpD,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;0EAzCQ,aAAa;8GAAb,aAAa,WAAb,aAAa,mBADD,MAAM;;;;;;;;;;;;;;;;;;;;ACNuC;;;;;;ICIlE,yEAA0B;IACtB,wEAA+C;IAAA,uDAAwC;;IAAA,4DAAK;IAC5F,4EAA2E;IAApB,0MAAmB;IACtE,0EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACb,4DAAM;IACN,yEAAwB;IACpB,uFAAyC;IAAtB,+UAAqB;IAAC,4DAAoB;IACjE,4DAAM;;IAP6C,0DAAwC;IAAxC,0JAAwC;;ADExF,MAAM,oBAAqB,SAAQ,0EAAU;;uSAAvC,oBAAoB,SAApB,oBAAoB;kHAApB,oBAAoB;;QCRjC,yEAAqB;QACjB,4EAAsF;QAAvC,wRAAS,kBAA4B,IAAC;QAAC,4DAAC;QAAA,4DAAS;QACpG,4DAAM;QAEN,4MAUc;;;;;;;;;;;;;;;;;;;;;;;;;;ACdiE;AACW;AAClC;AAOF;;;;;;;;;ICQtC,wEAA4D;IACxD,6EAAwB;IAAA,uDAAW;IAAA,4DAAS;IAChD,qEAAe;;;;IADH,0DAAe;IAAf,2EAAe;IAAC,0DAAW;IAAX,yEAAW;;ADHhD,MAAM,wBAAwB;IA2BjC,YACY,aAA4B,EAC5B,aAA4B;QAD5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QA3BvB,YAAO,GAAG,IAAI,uDAAY,EAA4B,CAAC;QACjE,aAAQ,GAA2B,EAAE,CAAC;QACtC,aAAQ,GAA2B,EAAE,CAAC;QACtC,WAAM,GAAG,6DAAc,CAAC;QACxB,SAAI,GAAG,IAAI,qDAAS,CAAC;YACxB,OAAO,EAAE,IAAI,uDAAW,EAAE;YAC1B,OAAO,EAAE,IAAI,uDAAW,EAAE;YAC1B,KAAK,EAAE,IAAI,uDAAW,EAAE;SAC3B,CAAC,CAAC;QACK,gBAAW,GAAc,EAAE,CAAC;QAC5B,gBAAW,GAA6B;YAC5C,OAAO,EAAE;gBACL,KAAK,EAAE,mBAAmB;gBAC1B,KAAK,EAAE,aAAa;aACvB;YACD,OAAO,EAAE;gBACL,KAAK,EAAE,mBAAmB;gBAC1B,KAAK,EAAE,aAAa;aACvB;YACD,KAAK,EAAE;gBACH,KAAK,EAAE,iBAAiB;gBACxB,KAAK,EAAE,OAAO;aACjB;SACJ,CAAC;QAME,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CACjC,eAAe,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,GAAG,eAAe,CACjG,CAAC;IACN,CAAC;IAEM,QAAQ;QAEX,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE;aACxC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE;aACxC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;IACpD,CAAC;IAED,IACI,UAAU,CAAC,GAAiC;QAE5C,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChB,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC1C,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC5C,MAAM,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;YACrE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,QAAQ;QAEX,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,oEAAW,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;IACjE,CAAC;IAEO,iBAAiB;QAErB,MAAM,MAAM,GAAG,IAAI,GAAG,EAAe,CAAC;QACtC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAE/B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CACvB,CAAC,WAAmB,EAAE,EAAE;YACpB,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YACnD,MAAM,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;YACzC,MAAM,CAAC,GAAG,CACN,YAAY,CAAC,KAAK,EAClB,YAAY,CAAC,CAAC,CAAC;gBACX,KAAK,EAAE,YAAY,CAAC,KAAK;gBACzB,KAAK,EAAE,YAAY;gBACnB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,YAAY,CAAC;aAChE,EAAC,CAAC,IAAI,CACV;QACL,CAAC,CACJ,CAAC;QAEF,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,eAAe,CAAC,WAAmB,EAAE,YAAiB;;QAE1D,QAAQ,WAAW,EAAE;YACjB,KAAK,SAAS;gBACV,OAAO,gBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,IAAI,YAAY,CAAC,0CAAE,IAAI,mCAAI,EAAE,CAAC;YACjF,KAAK,SAAS;gBACV,OAAO,gBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,IAAI,YAAY,CAAC,0CAAE,IAAI,mCAAI,EAAE,CAAC;YACjF,KAAK,OAAO;gBACR,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SACxC;QAED,OAAO,EAAE,CAAC;IACd,CAAC;;gGAjGQ,wBAAwB;sHAAxB,wBAAwB;QCfrC,0EAAqF;QAA5D,oJAAY,cAAU,IAAC;QAC5C,yEAA6C;QACzC,2EAAqB;QAAA,uDAAmC;;QAAA,4DAAQ;QAChE,0EACY;QAChB,4DAAM;QAEN,yEAA6C;QACzC,2EAAqB;QAAA,uDAAmC;;QAAA,4DAAQ;QAChE,2EACY;QAChB,4DAAM;QAEN,0EAA4C;QACxC,4EAAmB;QAAA,wDAAiC;;QAAA,4DAAQ;QACxD,6EAAgE;QAC5D,8EAAiB;QAAA,sEAAU;QAAA,4DAAS;QACpC,yIAEe;QACnB,4DAAS;QACjB,4DAAM;QAEN,wEAA+D;;QACnE,4DAAO;;QAxBD,+EAAkB;QAEK,0DAAmC;QAAnC,qJAAmC;QAChC,0DAAkB;QAAlB,+EAAkB;QAKrB,0DAAmC;QAAnC,sJAAmC;QAChC,0DAAkB;QAAlB,+EAAkB;QAKvB,0DAAiC;QAAjC,qJAAiC;QAGZ,0DAAW;QAAX,+EAAW;QAMlC,0DAAyC;QAAzC,2JAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClB1C;AAC+C;AAM9C;AAGqD;AAML;;;;;;;;;;;;;;;;ICPzD,wEAA0C;IACtC,4EAAgC;IAAA,uDAAoC;;IAAA,4DAAQ;IAC5E,gFAEwC;IADN,4WAAgC;IAElE,4DAAY;IACZ,gFAA6E;IACjF,qEAAe;;;IANqB,0DAAoC;IAApC,+JAAoC;IACjC,0DAAmB;IAAnB,mFAAmB;IAIrC,0DAAyC;IAAzC,yGAAyC;;;IA2ClE,wEAA4E;IACxE,0EAAmB;IACf,uEAAgG;IAChG,4EAAmD;IAAA,uDAA6B;;IAAA,4DAAQ;IAC5F,4DAAM;IACV,qEAAe;;;;IAHA,0DAA6B;IAA7B,yGAA6B;IAAc,2EAAe;IAC7C,0DAA8B;IAA9B,0GAA8B;IAAC,0DAA6B;IAA7B,gJAA6B;;;IAgBpF,wEAAwE;IACpE,6EAAwB;IAAA,uDAAuB;;IAAA,4DAAS;IAC5D,qEAAe;;;;IADH,0DAAe;IAAf,4EAAe;IAAC,0DAAuB;IAAvB,2IAAuB;;;IAiCnC,wEAAmD;IAC/C,6EAA0B;IAAA,uDAAe;IAAA,4DAAS;IACtD,qEAAe;;;IADH,0DAAiB;IAAjB,8EAAiB;IAAC,0DAAe;IAAf,uFAAe;;;;;IA5BjE,0EAAqG;IACjG,0EAAyB;IACrB,0EAAwB;IACpB,4EAAmB;IAAA,uDAAwC;;IAAA,4DAAQ;IACnE,uEAA0F;IAC1F,gFAA0E;IAC9E,4DAAM;IACN,0EAAiB;IACb,0EAA8B;IAC1B,6EAAsB;IAAA,wDAA4C;;IAAA,4DAAQ;IAC1E,2EAAkC;IAC9B,2EAAkD;IAA5B,iSAAS,aAAiB,IAAC;IAC7C,4EACyE;IACzE,0EAAoD;IACxD,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EAA8B;IAC1B,6EAAsB;IAAA,wDAA6C;;IAAA,4DAAQ;IAC3E,wEAAmF;IACnF,iFAA6E;IACjF,4DAAM;IACN,2EAA8B;IAC1B,6EAAqB;IAAA,wDAA4C;;IAAA,4DAAQ;IACzE,8EAAoE;IAChE,8EAAiB;IAAA,wDAAkC;;IAAA,4DAAS;IAC5D,6IAEe;IACnB,4DAAS;IACT,iFAA4E;IAChF,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;;IAlCG,0DAAmB;IAAnB,gFAAmB;IAEG,0DAAwC;IAAxC,oKAAwC;IAE1C,0DAAsC;IAAtC,mGAAsC;IAI7B,0DAA4C;IAA5C,yKAA4C;IAKjD,0DAAgC;IAAhC,wIAAgC;IAK3B,0DAA6C;IAA7C,0KAA6C;IAElD,0DAAyC;IAAzC,sGAAyC;IAGrC,0DAA4C;IAA5C,yKAA4C;IAE5C,0DAAkC;IAAlC,sJAAkC;IACjB,0DAAe;IAAf,wFAAe;IAIpC,0DAAwC;IAAxC,qGAAwC;;;AD3F9E,MAAM,qBAAqB;IA2B9B,YACY,UAAkC,EAClC,cAA8B,EAC9B,aAA4B,EAC5B,mBAAwC,EACxC,aAA4B,EAC5B,aAA4B,EAC5B,qBAA4C;QAN5C,eAAU,GAAV,UAAU,CAAwB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,0BAAqB,GAArB,qBAAqB,CAAuB;QAhC3B,0BAAqB,GAAG,IAAI,uDAAY,EAAW,CAAC;QAE1E,SAAI,GAAG,IAAI,sDAAS,CAAC;YACxB,MAAM,EAAE,IAAI,wDAAW,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAClD,WAAW,EAAE,IAAI,wDAAW,CAAC,KAAK,CAAC;YACnC,iBAAiB,EAAE,IAAI,wDAAW,CAAE,IAAI,EAAE,EAAE,CAAC;YAC7C,WAAW,EAAE,IAAI,wDAAW,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACvD,WAAW,EAAE,IAAI,wDAAW,CAAC,EAAE,CAAC;YAChC,OAAO,EAAE,IAAI,wDAAW,CAAC,IAAI,CAAC;YAC9B,WAAW,EAAE,IAAI,wDAAW,CAAC,EAAE,CAAC;YAChC,OAAO,EAAE,IAAI,wDAAW,CAAC,IAAI,CAAC;YAC9B,KAAK,EAAE,IAAI,wDAAW,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACjD,cAAc,EAAE,IAAI,sDAAS,CAAC,EAAE,CAAC;SACpC,CAAC,CAAC;QACI,iBAAY,GAAG,uDAAQ,CAAC;QACxB,uBAAkB,GAAG,6DAAc,CAAC;QACpC,qBAAgB,GAAG,2DAAY,CAAC;QAKhC,wBAAmB,GAAG,KAAK,CAAC;QAa/B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,qEAA2B,CAAC;QAC7D,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,MAAM,QAAQ,GAAG;YACC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE;iBACtD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACjC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE;iBACtD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACjC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE;iBACvD,IAAI,CAAC,SAAS,CAAC,EAAE,WAAC,WAAI,CAAC,SAAS,GAAG,eAAS,CAAC,OAAO,mCAAI,EAAE,IAAC;SACnE,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE;;YAC5B,IAAI,CAAC,eAAe,GAAG,gBAAI,CAAC,QAAQ,CAAC,OAAO,0CAAE,EAAE,mCAAI,IAAI,CAAC;YACzD,IAAI,CAAC,eAAe,GAAG,gBAAI,CAAC,QAAQ,CAAC,OAAO,0CAAE,EAAE,mCAAI,IAAI,CAAC;YACzD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,IAAI,IAAI,CAAC;YACpE,IAAI,CAAC,kBAAkB,GAAG,gBAAI,CAAC,QAAQ,CAAC,kBAAkB,0CAAE,EAAE,mCAAI,IAAI,CAAC;YACvE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACjB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;gBAC5B,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB,IAAI,IAAI;gBACrD,iBAAiB,EAAE,WAAI,CAAC,QAAQ,CAAC,kBAAkB,0CAAE,EAAE,KAAI,IAAI;gBAC/D,WAAW,EAAE,IAAI,CAAC,UAAU;qBACvB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;gBACjD,WAAW,EAAE,IAAI,CAAC,UAAU;qBACvB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;gBACjD,OAAO,EAAE,WAAI,CAAC,QAAQ,CAAC,OAAO,0CAAE,EAAE,KAAI,IAAI;gBAC1C,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;gBACvC,OAAO,EAAE,WAAI,CAAC,QAAQ,CAAC,OAAO,0CAAE,EAAE,KAAI,IAAI;gBAC1C,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;aAC7B,CAAC,CAAC;YACH,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,QAAQ;QAEX,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACjB,MAAM,cAAc,GAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACzE,IAAI,CAAC,kBAAkB,EAAE;iBACpB,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;SAC9E;aAAM;YACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC1B,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;YAC3E,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,EAAE,CAAC;SACrD;IACL,CAAC;IAED,IAAI,uBAAuB;QAEvB,OAAmB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,QAAQ,CAAC;IACjE,CAAC;IAEM,qBAAqB,CAAC,GAAsB;QAE/C,GAAG,GAAG,GAAG,IAAI,8DAAoB,CAAC;QAClC,MAAM,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAc,CAAC;QACzE,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAE1D,mBAAmB,CAAC,IAAI,CAAC,IAAI,sDAAS,CAAC;YACnC,EAAE,EAAE,IAAI,wDAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC;YACjC,KAAK,EAAE,IAAI,wDAAW,CAClB,GAAG,CAAC,KAAK,IAAI,EAAE,EACf,CAAC,gEAAmB,CAAC,CACxB;YACD,QAAQ,EAAE,IAAI,wDAAW,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,IAAI,wDAAW,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAC/D,OAAO,EAAE,IAAI,wDAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,gEAAmB,CAAC,CAAC;SAChE,CAAC,CAAC,CAAC;IACR,CAAC;IAEO,6BAA6B;QAEjC,MAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAC7D,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACjD,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,aAAa,CAAC;YAC7B,iFAAoB,CAAC,GAAG,EAAE,CAAC,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,EAAE,gEAAmB,CAAC;SACtE,CAAC,CAAC;QACH,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,YAAY,CACpB,SAAS,CAAE,CAAC,CAAC,EAAE,CAAC,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,sBAAsB,EAAE,CAAC,CAAC;IACtE,CAAC;IAEO,uBAAuB;QAE3B,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACzC,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACjD,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,aAAa,CAAC;YACvB,iFAAoB,CAAC,GAAG,EAAE,CAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,EAAE,gEAAmB,CAAC;SAClE,CAAC,CAAC;QACH,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,CAAC,SAAS,CAAE,CAAC,CAAC,EAAE,CAAC,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,sBAAsB,EAAE,CAAC,CAAC;IACjF,CAAC;IAEO,qBAAqB;;QAEzB,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAEnC,OAAO;YACH,EAAE,EAAE,UAAU,CAAC,EAAE;YACjB,MAAM,EAAE,UAAU,CAAC,MAAM;YACzB,KAAK,EAAE,UAAU,CAAC,KAAK;YACvB,kBAAkB,EAAE,UAAI,CAAC,kBAAkB,mCAAI,IAAI;YACnD,OAAO,EAAE,UAAI,CAAC,eAAe,mCAAI,IAAI;YACrC,YAAY,EAAE,UAAU,CAAC,WAAW;YACpC,OAAO,EAAE,UAAI,CAAC,eAAe,mCAAI,IAAI;YACrC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;YAC5D,YAAY,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC;gBAClC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;SAC5D,CAAC;IACN,CAAC;IAEO,2BAA2B,CAC/B,UAAkB;QAElB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,CAAC;YACvD,EAAE,EAAE,KAAK,CAAC,EAAE;YACZ,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAChB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI;YACvD,SAAS,EAAE,KAAK,CAAC,QAAQ;YACzB,QAAQ,EAAE,KAAK,CAAC,OAAO;YACvB,qBAAqB;YACrB,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,UAAU;SACvB,CAAC,CAAC,CAAC;IACR,CAAC;IAEO,mBAAmB,CAAC,aAA2C;QAEnE,OAAO,aAAa,CAAC,EAAE,CAAC,CAAC;YAClB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,aAAa,CAAC;IACzD,CAAC;IAEO,kBAAkB;QAEtB,MAAM,GAAG,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAEzC,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACrB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACxE,CAAC;IAEM,SAAS;QAEZ,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;;0FAvLQ,qBAAqB;mHAArB,qBAAqB;;QC7BlC,yEAAqB;QACjB,0EAAqF;QAA5D,iJAAY,cAAU,IAAC;QAC5C,yEAAkC;QAC9B,2EAAoB;QAAA,uDAAoC;;QAAA,4DAAQ;QAChE,sEAA6E;QAC7E,gFAAkE;QACtE,4DAAM;QACN,yEAAsB;QAClB,yEAAiD;QAC7C,4EACwC;QAApC,uMAAiC;QADrC,4DACwC;QACxC,4EAA0B;QAAA,wDAAqC;;QAAA,4DAAQ;QAC3E,4DAAM;QACN,2EAA8C;QAC1C,sIAOe;QACnB,4DAAM;QACV,4DAAM;QACN,2EAAiB;QACb,2EAA8B;QAC1B,6EAA0B;QAAA,wDAA0C;;QAAA,4DAAQ;QAC5E,2EAAkC;QAC9B,2EAAsD;QAAhC,yRAAS,YAAqB,IAAC;QACjD,4EAC+F;QAC/F,0EAAoD;QACxD,4DAAM;QACV,4DAAM;QACN,iFAAuE;QAC3E,4DAAM;QACN,2EAA8B;QAC1B,6EAA0B;QAAA,wDAA0C;;QAAA,4DAAQ;QAC5E,2EAAkC;QAC9B,2EAAsD;QAAhC,yRAAS,YAAqB,IAAC;QACjD,4EAC8E;QAC9E,0EAAoD;QACxD,4DAAM;QACV,4DAAM;QACN,iFAAuE;QAC3E,4DAAM;QACV,4DAAM;QACN,2EAAoC;QAChC,2EAA6C;QACzC,6EAAqB;QAAA,wDAAqC;;QAAA,4DAAQ;QAClE,iFAEmE;QAAxD,uMAA6B;;QACxC,4DAAY;QAChB,4DAAM;QACN,2EAAmC;QAC/B,8EAA6B;QAAA,wDAAuC;;QAAA,4DAAS;QACjF,4DAAM;QAEV,4DAAM;QAEN,2EAAiB;QACb,sIAKe;QACf,iFAAuE;QAC3E,4DAAM;QACN,2EAAc;QACV,6EAAqB;QAAA,wDAAqC;;QAAA,4DAAQ;QAClE,iFAEmE;QAAxD,uMAA6B;;QACxC,4DAAY;QAChB,4DAAM;QACN,2EAAyC;QACrC,6EAAmB;QAAA,wDAAmC;;QAAA,4DAAQ;QAC9D,8EAAgE;QAC5D,8EAAiB;QAAA,wDAAkC;;QAAA,4DAAS;QAC5D,sIAEe;QACnB,4DAAS;QACT,iFAAiE;QACrE,4DAAM;QACN,6EAAgE;QAC5D,sHAmCM;QACV,qEAAe;QACf,2EAAkB;QACd,8EAAsG;QAAlC,8IAAS,2BAAuB,IAAC;QACjG,0EAAgE;QAAA,wDACpE;;QAAA,4DAAS;QACb,4DAAM;QAEN,8EAA4D;QAAA,wDAA4B;;QAAA,4DAAS;QACjG,8EAAmF;QAAtB,8IAAS,eAAW,IAAC;QAAC,wDAA8B;;QAAA,4DAAS;QAC9H,4DAAO;QACX,4DAAM;;QAtII,0DAAkB;QAAlB,+EAAkB;QAEI,0DAAoC;QAApC,gKAAoC;QAEvC,0DAA8B;QAA9B,2FAA8B;QAKvC,0DAAiC;QAAjC,4FAAiC;QACX,0DAAqC;QAArC,kKAAqC;QAGhD,0DAAyB;QAAzB,yFAAyB;QAYd,0DAA0C;QAA1C,uKAA0C;QAKnD,0DAAgC;QAAhC,wIAAgC;QAGhC,0DAAmC;QAAnC,gGAAmC;QAG1B,0DAA0C;QAA1C,uKAA0C;QAKnD,0DAAgC;QAAhC,wIAAgC;QAGhC,0DAAmC;QAAnC,gGAAmC;QAK/B,0DAAqC;QAArC,kKAAqC;QAE/C,0DAAwD;QAAxD,iLAAwD;QAD3C,+EAAkB;QAMb,0DAAuC;QAAvC,2JAAuC;QAMlC,0DAAqB;QAArB,yFAAqB;QAM1C,0DAAmC;QAAnC,gGAAmC;QAG/B,0DAAqC;QAArC,kKAAqC;QAE/C,0DAAwD;QAAxD,iLAAwD;QAD9B,+EAAkB;QAMpC,0DAAmC;QAAnC,gKAAmC;QAEjC,0DAAkC;QAAlC,sJAAkC;QACnB,0DAAuB;QAAvB,2FAAuB;QAI1C,0DAA6B;QAA7B,0FAA6B;QAGe,0DAA2B;QAA3B,gGAA2B;QAuC9D,0DAA+B;QAA/B,wIAA+B;QAAW,0DACpE;QADoE,2KACpE;QAGwD,0DAA4B;QAA5B,gJAA4B;QACL,0DAA8B;QAA9B,kJAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIzH;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACFY;AAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AACnD;AACA;AACJ;;;;;AAFI;AAAA;AACS;AAAA;;;;;;AAHjB;AACI;AAIJ;;;;;AAJW;AAAA;;;;;;AAyCK;AAA0C;AAAiB;;;;;AAAjB;AAAA;;;;;;AAM1C;AAA0C;;AAAwC;;;;;AAAxC;AAAA;;;;;;AAM1C;AAA0C;AAAqB;;;;;AAArB;AAAA;;;;;;AArBtD;AACI;AAAI;AAAqB;AACzB;AAAI;;AAAkD;AACtD;AAAI;AAA2B;AAC/B;AAAI;;AAA+C;AACnD;AAAI;AAA4B;AAChC;AACI;AACI;AACA;AACJ;AACJ;AACA;AACI;AACI;AAAI;;AAA+C;AACnD;AACJ;AACJ;AACA;AACI;AACI;AAAI;AAAiE;AACrE;AACJ;AACJ;AACA;AACI;AACJ;AACJ;;;;;;AA1BQ;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAI0B;AAAA;AAKlB;AAAA;AACkB;AAAA;AAKlB;AAAA;AACkB;AAAA;AAIL;AAAA;;;;;;;;ADhDnC,MAAO,sBAAP,CAA6B;AAW/B,cAAoB,cAApB,EAAiD;AAA7B;AATb,8BAAqB,6DAArB;AACA,uBAAc,IAAI,GAAJ,EAAd;AACC,gCAAuB,IAAI,0CAAJ,EAAvB;AACD,0BAAiB,KAAK,oBAAL,CAA0B,YAA1B,EAAjB;AACC,6BAAoB,IAAI,0CAAJ,EAApB;AACD,uBAAc,KAAK,iBAAL,CAAuB,YAAvB,EAAd;AACC,8BAAqB,IAAI,0CAAJ,EAArB;AACD,wBAAe,KAAK,kBAAL,CAAwB,YAAxB,EAAf;AAE8C;;AAEhC,MAAV,UAAU;AAEjB,WAAO,KAAK,cAAL,CAAoB,IAA3B;AACH;;AAGM,cAAY,CAAC,UAAD,EAAmB;AAElC,SAAK,UAAL,CAAgB,IAAI,oEAAJ,CAAgB,IAAI,GAAJ,CAAQ,CAAC,CAAC,UAAD,EAAa,IAAb,CAAD,CAAR,CAAhB,CAAhB;AACH;;AAEM,YAAU,CACb,kBADa,EAEb,gBAAyB,KAFZ,EAEiB;AAE9B,sBAAkB,CAAC,aAAnB,GAAmC,OAAnC,CACI,CAAC,KAAD,EAAQ,SAAR,KAAsB,KAAK,KAAK,IAAV,GAChB,KAAK,WAAL,CAAiB,GAAjB,CAAqB,SAArB,EAAgC,KAAhC,CADgB,GAEhB,KAAK,WAAL,CAAiB,MAAjB,CAAwB,SAAxB,CAHV;;AAMA,QAAI,aAAJ,EAAmB;AACf,WAAK,oBAAL,CAA0B,IAA1B,CAA+B,IAA/B;AACA,WAAK,WAAL,CAAiB,GAAjB,CAAqB,MAArB,EAA6B,CAA7B;AACH;;AAED,UAAM,iBAAiB,GAAG,IAAI,GAAJ,EAA1B;AACA,SAAK,WAAL,CAAiB,OAAjB,CAAyB,CAAC,KAAD,EAAQ,GAAR,KAAe;AACpC,uBAAiB,CAAC,GAAlB,CAAsB,GAAtB,EAA2B,KAAK,CAAC,cAAN,CAAqB,OAArB,IAAgC,KAAK,CAAC,KAAtC,GAA8C,KAAzE;AACH,KAFD;AAIA,SAAK,iBAAL,CAAuB,IAAvB,CAA4B,IAA5B;AACA,SAAK,cAAL,CAAoB,IAApB,CAAyB,iBAAzB;AACA,SAAK,kBAAL,CAAwB,IAAxB,CAA6B,KAAK,WAAlC;AACA,SAAK,oBAAL,CAA0B,IAA1B,CAA+B,KAA/B;AACA,SAAK,iBAAL,CAAuB,IAAvB,CAA4B,KAA5B;AACH;;AAjD8B;;;mBAAtB,sB,EAAsB,6I;AAAA,C;;;QAAtB,sB;AAAsB,qC;AAAA,W;AAAA,U;AAAA,0X;AAAA;AAAA;ACbnC;AACI;AACA;AACI;;AAMJ;AACA;AAA2C;AAAA,eAAgB,uBAAmB,IAAnB,CAAhB;AAAwC,OAAxC;;AAE3C;AAEA;;AAEI;AAAsB;AAAA,eAAW,uBAAmB,IAAnB,CAAX;AAAmC,OAAnC;AACtB;AACJ;AACJ;AACA;AACI;AACI;AACI;AACI;AAAgB;;AAAkC;AAClD;AAAgB;;AAAiC;AACjD;AAAgB;;AAAmC;AACnD;AAAgB;;AAAwC;AACxD;AAAgB;;AAA2C;AAC3D;AAAgB;;AAAkC;AAClD;AAAgB;;AAAoC;AACpD;AAAgB;;AAAiC;AACjD;AAAgB;;AAAmC;AACvD;AACJ;AACA;AACI;;AA4BJ;AACJ;AACA;AAAoC;AAAA,eAAoB,sBAApB;AAAsC,OAAtC;AACpC;AACJ;;;;;AAjE6C;AAAA;AAOtB;AAAA,wFAAuB,OAAvB,EAAuB,iFAAvB;AAIR;AAAA,uJAAmC,OAAnC,EAAmC,8FAAnC,EAAmC,aAAnC,EAAmC,eAAnC;AAEoD;AAAA;AAQnC;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIK;AAAA;AA8BjB;AAAA,wFAAmB,eAAnB,EAAmB,kBAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjE2B;AACoC;AAC7B;AACc;AACS;AACG;AACd;AACD;AACqB;AAChC;AACC;AACH;AACqC;;;AAwBlF,MAAM,eAAe;;8EAAf,eAAe;4GAAf,eAAe;gHAdf;YACL,yDAAY;YACZ,yEAAuB,CAAC,yEAAwB,CAAC;YACjD,gEAAmB;YACnB,4EAAmB;YACnB,iEAAc;YACd,wDAAW;YACX,+DAAY;YACZ,4DAAW;SACd;mIAKQ,eAAe,mBApBpB,4FAAsB;QACtB,sFAAoB;QACpB,+FAAuB;QACvB,yFAAqB;QACrB,kGAAwB,aAGxB,yDAAY,qEAEZ,gEAAmB;QACnB,4EAAmB;QACnB,iEAAc;QACd,wDAAW;QACX,+DAAY;QACZ,4DAAW,aAGX,4FAAsB;;;;;;;;;;;;;;;;;;;;;AChCwC;;;;;;;ICKlE,yEAA0B;IACtB,wEAA+C;IAAA,uDAA6C;;IAAA,4DAAK;IACjG,4EAA2E;IAApB,6MAAmB;IACtE,0EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACb,4DAAM;IACN,yEAAwB;IACpB,uFAA+D;IAA5C,kVAAqB;IAAuB,4DAAoB;IACvF,4DAAM;;;IAP6C,0DAA6C;IAA7C,6JAA6C;IAMnD,0DAAqB;IAArB,qFAAqB;;;ADL/D,MAAM,uBAAwB,SAAQ,0EAAU;;sTAA1C,uBAAuB,SAAvB,uBAAuB;qHAAvB,uBAAuB;;QCTpC,yEAAqB;QACjB,4EAA8D;QAA1C,2RAAS,kBAA+B,IAAC;QACzD,wEAAkD;QACtD,4DAAS;QACb,4DAAM;QAEN,+MAUc;;QAdG,0DAA8B;QAA9B,uIAA8B;;;;;;;;;;;;;;;;;;;;;ACDA;AACmB;AACjB;;AAW1C,MAAM,eAAe;;8EAAf,eAAe;4GAAf,eAAe;gHALf;YACL,yDAAY;YACZ,yDAAU;SACb;mIAEQ,eAAe,mBAPpB,2EAAiB,aAGjB,yDAAY;QACZ,yDAAU;;;;;;;;;;;;;;;;;;ACJX,MAAM,iBAAiB;;kFAAjB,iBAAiB;+GAAjB,iBAAiB;QCP9B,yEAAiC;QAC/B,yEAAc;QACZ,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QACpB,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;;;;;;;;ACH4E;AACE;AACe;;;AAM5F,MAAM,WAAW;IAEpB,YAAY,OAAsB;QAE9B,OAAO,CAAC,QAAQ,CACZ,6EAAY,EACZ,8EAAa,EACb,2EAAY,EACZ,0EAAW,EACX,yEAAU,EACV,sEAAO,CACV,CAAC;IACN,CAAC;;sEAZQ,WAAW;wGAAX,WAAW;4GAHX,CAAC,+EAAiB,CAAC,EAClB,+EAAiB;mIAElB,WAAW,cAHV,+EAAiB,aACjB,+EAAiB;;;;;;;;;;;;;;;;;;;;;;ACLO;AACM;AACsC;AACvB;;;AAMpD,MAAM,aAAa;IAIxB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAFlC,iBAAY,GAAG,8EAAoB,GAAG,iBAAiB,CAAC;IAElB,CAAC;IAExC,IAAI,CAAC,KAA4B;QAEtC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5B,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE;YAC3B,IAAI,UAAU,GAAa,EAAE,CAAC;YAC9B,KAAK,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,cAAsB,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;YACrG,GAAG,IAAI,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACnC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA4B,GAAG,CAAC,CAAC,IAAI,CAAC,0DAAU,CAAC,CAAC,CAAC,EAAE,CAAC,wCAAE,CAAC,6EAAkB,CAAC,CAAC,CAAC,CAAC;IAE3G,CAAC;;0EAhBU,aAAa;8GAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;ACRqC;AACyB;;;AAO3E,MAAM,YAAY;IAMvB,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAJxC,wBAAmB,GAAG,IAAI,yCAAO,EAA6B,CAAC;QAC/D,UAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;QAChD,kBAAa,GAAmB,EAAE,CAAC;QAIzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,6EAAkB,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,IAAI,IAAI;QAEN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAEM,IAAI,CAAC,QAA+B,IAAI;QAEzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;aACjD,SAAS,CAAC,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;wEAxBQ,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;ACCR;AACI;AAAI;AAAa;AACrB;;;;;AADQ;AAAA;;;;ACEd,MAAO,qBAAP,CAA4B;AAEhC,cAAoB,aAApB,EAA+C;AAA3B;AAAgC;;AAEhC,MAAT,SAAS;AAElB,WAAO,KAAK,aAAL,CAAmB,IAA1B;AACD;;AAP+B;;;mBAArB,qB,EAAqB,0I;AAAA,C;;;QAArB,qB;AAAqB,oC;AAAA,U;AAAA,S;AAAA,4G;AAAA;AAAA;ADXlC;AACI;AACI;AACI;AACI;AAAgB;AAAS;AAC7B;AACJ;AACA;AACI;;AAGJ;AACJ;AACJ;;;;;AALoC;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEPQ;AACN;AACmC;;;AAKlE,MAAM,aAAa;IAItB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAEvC,YAAY;QAEf,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAyB,aAAa,CAAC,YAAY,CAAC;aACzE,IAAI,CAAC,0DAAU,CAAC,CAAC,CAAC,EAAE,CAAC,wCAAE,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;IACxC,CAAC;;AARM,0BAAY,GAAG,iFAAoB,GAAG,kBAAkB,CAAC;0EAFvD,aAAa;8GAAb,aAAa,WAAb,aAAa,mBADD,MAAM;;;;;;;;;;;;;;;;;;;;;ACNa;AACN;AACmC;;;AAKlE,MAAM,aAAa;IAItB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAEvC,YAAY;QAEf,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAyB,aAAa,CAAC,WAAW,CAAC;aACxE,IAAI,CAAC,0DAAU,CAAC,CAAC,CAAC,EAAE,CAAC,wCAAE,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;IACxC,CAAC;;AARM,yBAAW,GAAG,iFAAoB,GAAG,kBAAkB,CAAC;0EAFtD,aAAa;8GAAb,aAAa,WAAb,aAAa,mBADD,MAAM;;;;;;;;;;;;;;;;;;;;ACHxB,MAAM,UAAU;IAInB,YAA2B,YAAsB;QAAtB,iBAAY,GAAZ,YAAY,CAAU;IAAG,CAAC;IAErD,SAAS,CAAC,OAAY;QAElB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,KAAK;QAED,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;;oEAdQ,UAAU;wGAAV,UAAU;;;;;;;;;;;;;;;;ACChB,MAAM,WAAW;IAEpB,YAAoB,MAAwB;QAAxB,WAAM,GAAN,MAAM,CAAkB;IAAI,CAAC;IAE1C,aAAa;QAEhB,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;CACJ;;;;;;;;;;;;;;;;;;ACb4C;;AAItC,MAAM,qBAAqB;IAK9B;QAHQ,uBAAkB,GAAG,IAAI,yCAAO,EAAW,CAAC;QAC5C,iBAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAI1D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAEM,oBAAoB;QAEvB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;IACtC,CAAC;IAEM,SAAS,CACZ,IAA+B,EAC/B,KAA4B,EAC5B,QAAqB;QAErB,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;;0FArBQ,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBADT,MAAM;;;;;;;;;;;;;;;;ACDxB,MAAM,oBAAoB,GAAG,CAChC,SAAwB,EACxB,SAAsB,EACX,EAAE,CAAC,CACV,WAA4B,EACP,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;ACL5E;;;;;;;ACFA;AACI;AAAM;AAAW;AACrB;;;;;AADU;AAAA;;;;ADQJ,MAAO,mBAAP,CAA0B;AAU5B,cAA2B,qBAA3B,EAAuE;AAA5C;AAJnB,yBAAgB,IAAI,yCAAJ,EAAhB;AACQ,mBAAgC,KAAK,aAAL,CAAmB,YAAnB,EAAhC;AACR,uBAAqC,EAArC;AAEmE;;AAEpE,UAAQ;AAEX,QAAI,KAAK,OAAT,EAAkB;AACd,WAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,qBAAL,CAA2B,SAA3B,CAAsC,WAAD,IAAyB;AAChF,YAAI,CAAC,WAAL,EAAkB;AACd;AACH;;AACD,aAAK,aAAL,CAAmB,IAAnB,CAAwB,EAAxB;;AACA,YAAI,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,MAAjC,EAAyC;AACrC,eAAK,aAAL,CAAmB,IAAnB,CAAwB,KAAK,UAA7B;AACH;AACJ,OARqB,CAAtB;AASA,WAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,OAAL,CAAa,aAAb,CAA2B,SAA3B,CAAqC,CAAC,IAAG;AAC3D,aAAK,aAAL,CAAmB,IAAnB,CAAwB,EAAxB;;AACA,YAAI,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,MAA7B,IAAuC,KAAK,OAAL,CAAa,KAAxD,EAA+D;AAC3D,eAAK,aAAL,CAAmB,IAAnB,CAAwB,KAAK,UAA7B;AACH;AACJ,OALqB,CAAtB;AAMH;AACJ;;AAEM,aAAW;AAEd,SAAK,WAAL,CAAiB,OAAjB,CAAyB,YAAY,IAAI,YAAY,SAAZ,gBAAY,WAAZ,GAAY,MAAZ,eAAY,CAAE,WAAd,EAAzC;AACH;;AAEa,MAAV,UAAU;;;AAEV,WAAO,MAAM,CAAC,IAAP,CAAY,YAAK,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAE,MAAd,KAAwB,EAApC,EACF,MADE,CACM,SAAD,IAAsB;AAAA;;AAAC,yBAAK,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAE,MAAd,KAAwB,KAAK,OAAL,CAAa,MAAb,CAAoB,SAApB,CAAxB;AAAsD,KADlF,EAEF,GAFE,CAEG,SAAD,IAAsB;AAAA;;AAAC,sCAAmB,CAAC,UAApB,CAA+B,GAA/B,CAAmC,SAAnC,OAA6C,IAA7C,IAA6C,aAA7C,GAA6C,EAA7C,GAAiD,SAAjD;AAA0D,KAFnF,CAAP;AAGH;;AA3C2B;AAErB,iCAAa,IAAI,GAAJ,GACf,GADe,CACX,UADW,EACC,wBADD,CAAb;;;mBAFE,mB,EAAmB,oJ;AAAA,C;;;QAAnB,mB;AAAmB,kC;AAAA;AAAA;AAAA,G;AAAA,U;AAAA,S;AAAA,mC;AAAA;AAAA;ACThC;;;;;AAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICC5B,wEAA0D;;;IAA9B,mFAAmB;;;IAC/C,wEAAiC;IAAA,uDAAgB;IAAA,qEAAe;;;IAA/B,0DAAgB;IAAhB,kFAAgB;;;IAGjD,yEAA0B;IAC1B,wEAA+C;IAAA,uDAAW;IAAA,4DAAK;IAC/D,4EAA2E;IAApB,oMAAmB;IACtE,0EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACT,4DAAM;IACN,yEAAwB;IACpB,6DAAyB;IAC7B,4DAAM;;;IAPyC,0DAAW;IAAX,6EAAW;;;ACGvD,MAAM,cAAc;IAOvB,YAA2B,YAAsB;QAAtB,iBAAY,GAAZ,YAAY,CAAU;IAAG,CAAC;IAErD,IAAa,WAAW,CAAC,WAAgC;QAErD,WAAW,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,CAAC,gBAAgB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,SAAS,CAAC,OAAY;QAElB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,KAAK;QAED,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;;4EAtBQ,cAAc;4GAAd,cAAc;;;QDT3B,4EAAiD;QAA7B,kRAAS,kBAAkB,IAAC;QAC5C,kHAA0D;QAC1D,4HAAgE;QACpE,4DAAS;QACT,sMAUc;;QAbA,0DAAgB;QAAhB,gFAAgB;QACX,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;;;;;;AEA5B,MAAM,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AACxC,MAAM,eAAe,GAAG,EAAE,CAAC;AAE3B,MAAM,UAAU;IAAvB;QAEY,cAAS,GAAgB,eAAe,CAAC;QACzC,UAAK,GAAW,CAAC,CAAC;QAClB,cAAS,GAAgB,IAAI,CAAC;QAC9B,cAAS,GAAgB,IAAI,CAAC;IA6D1C,CAAC;IA3DG,IAAW,IAAI;QAEX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,IAAW,QAAQ;QAEf,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,IAAW,IAAI,CAAC,IAAY;QAExB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,IAAW,QAAQ,CAAC,QAAqB;QAErC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,IAAW,QAAQ;QAEf,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,IAAW,QAAQ,CAAC,KAAoB;QAEpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,IAAW,QAAQ;QAEf,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,IAAW,QAAQ,CAAC,KAAoB;QAEpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,CAAC;IAEM,sBAAsB,CAAC,KAAuB;QAEjD,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACjC;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAC1C;IACL,CAAC;IAEM,aAAa;QAEhB,OAAO,IAAI,GAAG,CAAc,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACvF,CAAC;IAEM,sBAAsB;QAEzB,OAAO,IAAI,GAAG,EAAE,CAAC;IACrB,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;ACvEyF;AAC9B;;;;;ICGhD,wEAAqD;IACjD,4EAA2B;IAAA,uDAAc;IAAA,4DAAS;IACtD,qEAAe;;;IADH,0DAAkB;IAAlB,8EAAkB;IAAC,0DAAc;IAAd,4EAAc;;ADIlD,MAAM,mBAAmB;IAJhC;QAMwC,sBAAiB,GAA6B,IAAI,uDAAY,EAAE,CAAC;QAG9F,eAAU,GAAe,IAAI,yDAAU,EAAE,CAAC;QAC1C,kBAAa,GAAG,wDAAS,CAAC;QACzB,kBAAa,GAAkB,EAAE,CAAC;KAgC7C;IA9BU,QAAQ;QAEX,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YACrC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACpF,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACpF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,CAAC,cAAc,CAAC,SAAS,CACzB,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CACnF,CACJ,CAAC;IACN,CAAC;IAEM,WAAW;QAEd,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;IACnG,CAAC;IAEM,gBAAgB,CAAC,QAAqB;QAEzC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAEM,YAAY,CAAC,IAAY;QAE5B,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;;sFAtCQ,mBAAmB;iHAAnB,mBAAmB;QCThC,sEAAK;QACD,sEAAK;QACD,2EAA0B;QAAA,wEAAa;QAAA,4DAAQ;QAC/C,4EAAsG;QAA3C,iKAAiB,4BAAwB,IAAC;QACjG,iIAEe;QACnB,4DAAS;QACb,4DAAM;QACN,sEAAK;QACD,4EAA6F;QAArF,wJAAS,mIAAqC,CAAC,CAAC,IAAC;QAAoC,4DAAC;QAAA,4DAAS;QACvG,uDACA;QAAA,6EAA6F;QAArF,yJAAS,mIAAqC,CAAC,CAAC,IAAC;QAAoC,6DAAC;QAAA,4DAAS;QAC3G,4DAAM;QACV,4DAAM;;;QAX4B,0DAAgC;QAAhC,4HAAgC;QACnB,0DAAgB;QAAhB,sFAAgB;QAMG,0DAAkC;QAAlC,gIAAkC;QAC5F,0DACA;QADA,2LACA;QAA0D,0DAAkC;QAAlC,gIAAkC;;;;;;;;;;;;;;;;;;;ACZ7B;;;AAOhE,MAAM,qBAAqB;IAJlC;QAOc,iBAAY,GAAG,IAAI,uDAAY,EAA4B,CAAC;KAgCzE;IA3BG,IAAa,KAAK,CAAC,KAAa;QAE5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;SAClE;IACL,CAAC;IAED,IAAI,KAAK;QAEL,OAAO,IAAI,CAAC,MAAM;IACtB,CAAC;IAEM,QAAQ;QAEX,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEM,aAAa;QAEhB,OAAO,IAAI,GAAG,CAAc,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC;IAEM,sBAAsB;QAEzB,OAAO,IAAI,GAAG,EAAE,CAAC;IACrB,CAAC;;0FAlCQ,qBAAqB;mHAArB,qBAAqB;QCPlC,2EAA2B;QAAA,uDAAW;QAAA,4DAAQ;QAC9C,2EAAkF;QAAhD,8LAAyB,oFAAU,cAAU,IAApB;QAA3D,4DAAkF;;QAD3E,gFAAmB;QAAC,0DAAW;QAAX,0EAAW;QACnB,0DAAc;QAAd,2EAAc;;;;;;;;;;;;;;;;;;;;;;;;;;ACAc;AAC2B;AACf;AACa;AAC3B;AACmC;AACvB;AACY;;AAuB9D,MAAM,YAAY;;wEAAZ,YAAY;yGAAZ,YAAY;6GANZ;YACL,yDAAY;YACZ,uDAAW;YACX,+EAAiB;SACpB;mIAEQ,YAAY,mBAnBjB,mFAAmB;QACnB,mEAAU;QACV,iFAAmB;QACnB,yFAAqB;QACrB,kEAAc,aAUd,yDAAY;QACZ,uDAAW;QACX,+EAAiB,aATjB,mFAAmB;QACnB,mEAAU;QACV,iFAAmB;QACnB,yFAAqB;QACrB,kEAAc;;;;;;;;;;;;;;;;;;;;;;;;ACrBqC;AACnB;AAC2B;;;;AAK5D,MAAM,oBAAoB;IAK7B,YAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAElE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,mEAAkB,CAAC,CAAC;QAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;QAChG,IAAI,CAAC,sBAAsB,GAAG,IAAI,iDAAe,CAAU,QAAQ,CAAC,CAAC;QACrE,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,CAAC;QAE3E,IAAI,CAAC,YAAY,CAAC,2BAA2B,EAAE,CAAC;QAEhD,IAAI,CAAC,YAAY,CAAC,MAAM;aACnB,IAAI,CAAC,sDAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC;aAC9C,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,MAAM;aACnB,IAAI,CAAC,sDAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;aACtC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,CAAC;IACxD,CAAC;IAED,IAAY,iBAAiB,CAAC,UAAmB;QAE7C,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAEM,KAAK;QAER,IAAI,CAAC,YAAY,CAAC,6BAA6B,EAAE,CAAC;IACtD,CAAC;IAEM,MAAM;QAET,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAClC,CAAC;IAEM,YAAY;QAEf,OAAO,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE;aAC3C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,CAAC;IACrD,CAAC;;wFA1CQ,oBAAoB;qHAApB,oBAAoB,WAApB,oBAAoB,mBADP,MAAM;AA+CzB,MAAM,yBAAyB;IAE3B,WAAW,CAAC,GAAsB;QAErC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEnB,OAAO,gDAAU,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;;kGAPQ,yBAAyB;0HAAzB,yBAAyB,WAAzB,yBAAyB,mBADZ,MAAM;;;;;;;;;;;;;;;;;ACrDiC;AAE1D,SAAS,iBAAiB,CAAC,IAAgB;IAE9C,OAAO,IAAI,2EAAmB,CAAC,IAAI,CAAC,CAAC;AACzC,CAAC;;;;;;;;;;;;;;;;;;;;ACLkD;;;;AAK5C,MAAM,oBAAoB;IAK7B,YAAoB,WAAiC,EAAU,MAAc;QAAzD,gBAAW,GAAX,WAAW,CAAsB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAEzE,IAAI,CAAC,gCAAgC,GAAG,IAAI,iDAAe,CAAoB,KAAK,CAAC,CAAC;QACtF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gCAAgC,CAAC,YAAY,EAAE,CAAC;QAE5E,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC,IAAa,EAAE,EAAE;YAClE,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,WAAW,CACd,KAA6B,EAC7B,KAA0B;QAE1B,OAAO,IAAI,CAAC,eAAe,CAAC;IAChC,CAAC;;wFApBQ,oBAAoB;qHAApB,oBAAoB,WAApB,oBAAoB,mBADP,MAAM;;;;;;;;;;;;;;;;ACLzB,MAAM,WAAW,GAAG;IACvB,UAAU,EAAE,IAAI;IAChB,aAAa,EAAE,wBAAwB;IACvC,QAAQ,EAAE,wBAAwB;IAClC,eAAe,EAAE,IAAI;IACrB,aAAa,EAAE,OAAO;CACzB,CAAC;;;;;;;;;;;;;;;;AANK,MAAM,WAAW,GAAG;IACvB,UAAU,EAAE,IAAI;IAChB,aAAa,EAAE,wBAAwB;IACvC,QAAQ,EAAE,wBAAwB;IAClC,eAAe,EAAE,IAAI;IACrB,aAAa,EAAE,OAAO;CACzB,CAAC;;;;;;;;;;;;;;;;;;ACN6C;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IACxB,6DAAc,EAAE,CAAC;CACpB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAC9C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { ContractsModule } from './modules/contracts/contracts.module';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthModule } from \"./modules/auth/auth.module\";\nimport { LoginSuccessPage } from \"./modules/auth/login-success/login-success.component\";\nimport { ContractsListComponent } from './modules/contracts/contracts-list/contracts-list.component';\nimport { DashboardModule } from \"./modules/dashboard/dashboard.module\";\nimport { HomepageComponent } from \"./modules/dashboard/homepage/homepage.component\";\nimport { IsAuthenticatedGuard } from './services/guard/is-authenticated.guard';\nimport { InvoicesListComponent } from './modules/invoices/invoices-list/invoices-list.component';\n\nconst routes: Routes = [\n    { path: 'login-success', component: LoginSuccessPage },\n    { path: '', component: HomepageComponent },\n    {\n        path: 'contracts',\n        component: ContractsListComponent,\n        canActivate: [IsAuthenticatedGuard]\n    },\n    {\n        path: 'invoices',\n        component: InvoicesListComponent,\n        canActivate: [IsAuthenticatedGuard]\n    },\n];\n\n@NgModule({\n    imports: [\n        AuthModule,\n        DashboardModule,\n        ContractsModule,\n        RouterModule.forRoot(routes)\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule\n{\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.sass']\n})\nexport class AppComponent\n{\n}\n","<app-navigation-bar></app-navigation-bar>\n<div class=\"container main-container\">\n    <router-outlet></router-outlet>\n</div>","import { AuthInterceptor } from './interceptors/auth-interceptor';\nimport { ContractsModule } from './modules/contracts/contracts.module';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavigationBarComponent } from './components/navigation-bar/navigation-bar.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { IconsModule } from './modules/icons/icons.module';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\nimport { OAuthModule, OAuthResourceServerErrorHandler } from \"angular-oauth2-oidc\";\nimport { AuthModule } from \"./modules/auth/auth.module\";\nimport { translationServiceConfig } from \"./config/i18n.config\";\nimport { oAuthModuleConfig } from './config/auth.config';\nimport { environment } from '../environments/environment';\nimport localeRo from '@angular/common/locales/ro';\nimport { registerLocaleData } from '@angular/common';\nimport { ClientRequestErrorHandler } from './services/authorization';\nimport { InvoicesListComponent } from './modules/invoices/invoices-list/invoices-list.component';\n\nregisterLocaleData(localeRo);\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavigationBarComponent,\n        InvoicesListComponent,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        NgbModule,\n        IconsModule,\n        HttpClientModule,\n        AuthModule,\n        OAuthModule.forRoot(oAuthModuleConfig),\n        TranslateModule.forRoot(translationServiceConfig),\n        ContractsModule,\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n        { provide: LOCALE_ID, useValue: environment.defaultLocale },\n        { provide: OAuthResourceServerErrorHandler, useClass: ClientRequestErrorHandler },\n    ],\n    bootstrap: [AppComponent],\n    exports: [\n    ],\n})\nexport class AppModule\n{\n}\n","import { Component } from '@angular/core';\nimport { AuthorizationService } from \"../../services/authorization\";\nimport { share } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n    selector: 'app-navigation-bar',\n    templateUrl: './navigation-bar.component.html',\n    styleUrls: ['./navigation-bar.component.sass']\n})\nexport class NavigationBarComponent\n{\n    public isMenuCollapsed = true;\n    public isUserLoggedIn$: Observable<boolean>;\n\n    constructor(private authorisationService: AuthorizationService)\n    {\n        this.isUserLoggedIn$ = this.authorisationService\n            .isUserLoggedInObservable.pipe(share());\n    }\n\n    login(): void\n    {\n        this.authorisationService.login();\n    }\n\n    logout(): void\n    {\n        this.authorisationService.logout();\n    }\n}\n","<nav class=\"navbar-main navbar navbar-expand-lg navbar-light mb-3\">\n  <a class=\"navbar-brand\" [routerLink]=\"'/'\"><img src=\"../../../assets/logo.png\" width=\"30\" height=\"30\" alt=\"\"></a>\n\n  <button class=\"navbar-toggler\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\n    &#9776;\n  </button>\n\n  <div [ngbCollapse]=\"isMenuCollapsed\" class=\"collapse navbar-collapse flex-row-reverse\">\n    <ul class=\"navbar-nav text-right\">\n      <ng-container *ngIf=\"isUserLoggedIn$ | async else logged_out\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" [routerLink]=\"'.'\" (click)=\"isMenuCollapsed = true\">\n            {{ 'navbar.reports' | translate }}\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"'.'\" (click)=\"isMenuCollapsed = true\">\n            {{ 'navbar.transactions' | translate }}\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"'/contracts'\" (click)=\"isMenuCollapsed = true\">\n            {{ 'navbar.contracts' | translate }}\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"'/invoices'\" (click)=\"isMenuCollapsed = true\">\n            {{ 'navbar.invoices' | translate }}\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"'.'\" (click)=\"isMenuCollapsed = true\">\n            {{ 'navbar.settings' | translate }}\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"'.'\" (click)=\"isMenuCollapsed = true\">\n            {{ 'navbar.projects' | translate }}\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"'.'\" (click)=\"isMenuCollapsed = true\">\n            {{ 'navbar.createNewProject' | translate }}\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"'.'\" (click)=\"isMenuCollapsed = true\">\n            <fa-icon [icon]=\"['far', 'user-circle']\"></fa-icon>\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <button (click)=\"logout()\" type=\"button\" class=\"btn btn-dark\">{{ 'navbar.logOut' | translate }}</button>\n        </li>\n      </ng-container>\n    </ul>\n  </div>\n</nav>\n<ng-template #logged_out>\n  <li class=\"nav-item\">\n    <button (click)=\"login()\" type=\"button\" class=\"btn btn-dark\">{{ 'navbar.logIn' | translate }}</button>\n  </li>\n</ng-template>","import { AuthConfig, OAuthModuleConfig } from 'angular-oauth2-oidc';\nimport { environment } from \"../../environments/environment\";\n\nconst AUTH_PROVIDER_BASE_PATH = environment.gatekeeperUrl + 'openid';\n\nexport const authCodeFlowConfig: AuthConfig = {\n    issuer: AUTH_PROVIDER_BASE_PATH,\n    redirectUri: window.location.origin + '/login-success',\n    clientId: '927126',\n    responseType: 'code',\n    scope: 'openid profile budget',\n    showDebugInformation: true,\n    timeoutFactor: 0.01,\n    sessionChecksEnabled: true,\n    postLogoutRedirectUri: window.location.origin + '/logout-success'\n};\n\nexport const oAuthModuleConfig: OAuthModuleConfig = {\n    resourceServer: {\n        sendAccessToken: true,\n    },\n};\n","import { TranslateModuleConfig } from \"@ngx-translate/core/public_api\";\nimport { TranslateLoader } from \"@ngx-translate/core\";\nimport { HttpLoaderFactory } from \"../services/factories\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\n\nexport const translationServiceConfig: TranslateModuleConfig = {\n    loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n    },\n    defaultLanguage: environment.defaultLanguage\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { from, Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthorizationService } from '../services/authorization';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor\n{\n    constructor(private authService: AuthorizationService)\n    {\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n    {\n        const request = req.clone({ setHeaders: { 'x-requested-by': 'babel-client' } });\n\n        return next.handle(request).pipe(catchError(response => {\n            return this.handleResponseError(response, request, next);\n        }));\n    }\n\n    private handleResponseError(\n        response: Response,\n        request: HttpRequest<any>,\n        next: HttpHandler\n    ): Observable<HttpEvent<any>> {\n        return response.status == 403 ?\n               from(this.authService.refreshToken()).pipe(() => next.handle(request)) :\n               throwError(response);\n    }\n}\n","export interface PaginatedView<T>\n{\n    count: number;\n    next: String;\n    previous: String;\n    results: Array<T>;\n}\n\nexport const emptyPaginatedView: PaginatedView<any> = {\n    count: 0,\n    next: '',\n    previous: '',\n    results: new Array<any>(),\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginSuccessPage } from \"./login-success/login-success.component\";\n\n\n@NgModule({\n    declarations: [\n        LoginSuccessPage\n    ],\n    exports: [\n        LoginSuccessPage\n    ],\n    imports: [\n        CommonModule\n    ]\n})\nexport class AuthModule\n{\n}\n","import { Component } from '@angular/core';\nimport { OAuthService } from \"angular-oauth2-oidc\";\nimport { authCodeFlowConfig } from \"../../../config/auth.config\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: 'app-login-success-page',\n    template: '<h1>Loading</h1>',\n})\nexport class LoginSuccessPage\n{\n    constructor(private oauthService: OAuthService, private router: Router)\n    {\n        this.oauthService.configure(authCodeFlowConfig);\n        this.oauthService.loadDiscoveryDocumentAndLogin()\n            .then(_ => router.navigateByUrl('/'));\n    }\n}\n","import { SimplifiedPartner } from \"../../../models/partner\";\nimport { SimplifiedProject } from '../../../models/project';\n\nexport interface ContractDTO\n{\n    id: Number;\n    uuid: String;\n    number: String;\n    state: number;\n    connected_contract: SimplifiedContractDTO;\n    partner: SimplifiedPartner;\n    partner_type: number;\n    project: SimplifiedProject;\n    signing_date: Date;\n    closure_date: Date;\n    contractValue: number;\n    stages: ContractStageDTO[];\n}\n\nexport interface CurrencyDTO\n{\n    id: Number;\n    uuid: String;\n    name: String;\n    code: String;\n    decimal_multiplier: Number;\n}\n\nexport interface ContractStageDTO\n{\n    id: number|null,\n    title: String;\n    deadline: Date|null;\n    net_value: number|null;\n    vat_rate: number|'';\n    currency: CurrencyDTO|null;\n    contract: number|null;\n}\n\nexport interface SimplifiedContractDTO\n{\n    id: Number;\n    number: String;\n    full_number: String;\n}\n\nexport interface ContractCreateUpdateDTO\n{\n    id: Number|null;\n    number: String;\n    state: String;\n    connected_contract: Number|null;\n    partner: Number|null;\n    partner_type: String|null;\n    project: Number|null;\n    signing_date: String;\n    closure_date: String|null;\n}\n\nexport interface ContractStageCreateUpdateDTO\n{\n    id: Number|null,\n    title: String;\n    deadline: String|null;\n    net_value: Number|null;\n    vat_rate: Number|'';\n    currency: Number|null;\n    contract: Number|null;\n}\n\nexport const NullContractCreateUpdateDTO: ContractCreateUpdateDTO = {\n    id: null,\n    number: '',\n    state: '',\n    connected_contract: null,\n    partner: null,\n    partner_type: '',\n    project: null,\n    signing_date: '',\n    closure_date: '',\n};\n\nexport const NullContractStageDTO: ContractStageDTO = {\n    id: null,\n    title: '',\n    deadline: null,\n    net_value: null,\n    vat_rate: '',\n    currency: null,\n    contract: null,\n};\n","export const partnerTypes = ['contracts.partner_type.provider', 'contracts.partner_type.customer'];\nexport const contractStates = ['contracts.states.ongoing', 'contracts.states.completed'];\nexport const vatRates = [0, 5, 9, 19];\n\n","import { environment } from '../../../../environments/environment.local';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from \"rxjs\";\nimport { catchError } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { emptyPaginatedView, PaginatedView } from \"../../../models/paginated_view\";\nimport {\n    ContractCreateUpdateDTO,\n    ContractDTO,\n    ContractStageCreateUpdateDTO,\n    SimplifiedContractDTO,\n} from '../_models/DTOs';\n\n@Injectable({ providedIn: 'root' })\nexport class ContractClient\n{\n    private CONTRACTS_URL = environment.babelUrl + 'budget/contracts/';\n\n    constructor(private httpClient: HttpClient) {}\n\n    public list(query: Map<string, any>|null): Observable<PaginatedView<ContractDTO>>\n    {\n        let url = this.CONTRACTS_URL;\n        if (query && query.size > 0) {\n            let queryTerms: string[] = [];\n            query.forEach((value: any, queryParamName: string) => queryTerms.push(queryParamName + '=' + value));\n            url += '?' + queryTerms.join('&');\n        }\n        return this.httpClient.get<PaginatedView<ContractDTO>>(url)\n            .pipe(catchError(_ => of(emptyPaginatedView)));\n    }\n    \n    public create(dto: ContractCreateUpdateDTO): Observable<ContractCreateUpdateDTO>\n    {\n        return this.httpClient.post<ContractCreateUpdateDTO>(this.CONTRACTS_URL, dto);\n    }\n\n    public update(\n        id: Number,\n        dto: ContractCreateUpdateDTO\n    ): Observable<ContractCreateUpdateDTO> {\n        return this.httpClient\n            .put<ContractCreateUpdateDTO>(this.CONTRACTS_URL + id + '/', dto);\n    }\n\n    public autocomplete(): Observable<PaginatedView<SimplifiedContractDTO>>\n    {\n        const url = this.CONTRACTS_URL + 'autocomplete/';\n\n        return this.httpClient\n            .get<PaginatedView<SimplifiedContractDTO>>(url)\n            .pipe(catchError(_ => of(emptyPaginatedView)));\n    }\n}\n\n@Injectable({providedIn: \"root\"})\nexport class ContractStageClient\n{\n    static CONTRACT_URL = environment.babelUrl + 'budget/contracts/';\n\n    constructor(private httpClient: HttpClient) {}\n\n    public create(\n        dto: ContractStageCreateUpdateDTO\n    ): Promise<ContractStageCreateUpdateDTO> {\n        return this.httpClient\n            .post<ContractStageCreateUpdateDTO>(this.url(<Number>dto.contract), dto)\n            .toPromise();\n    }\n\n    public update(\n        id: Number,\n        dto: ContractStageCreateUpdateDTO\n    ): Promise<ContractStageCreateUpdateDTO> {\n        return this.httpClient\n            .put<ContractStageCreateUpdateDTO>(this.url(<Number>dto.contract, id), dto)\n            .toPromise();\n    }\n\n    private url(contractId: Number, contractStageId?: Number): string\n    {\n        let url = ContractStageClient.CONTRACT_URL + contractId + '/';\n        // TODO: Modify this when BE is fixed.\n        if (contractStageId) {\n            url += 'stage/' + contractStageId + '/';\n        } else {\n            url += 'stages/';\n        }\n\n        return url;\n    }\n}\n","import { emptyPaginatedView, PaginatedView } from '../../../models/paginated_view';\nimport { ContractCreateUpdateDTO, ContractDTO } from '../_models/DTOs';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { ContractClient } from './contract-client.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class ContractStore\n{\n    private contractsListSubject = new Subject<PaginatedView<ContractDTO>>();\n    private list$ = this.contractsListSubject.asObservable();\n    private subscriptions: Subscription[] = [];\n\n    constructor(private contractClient: ContractClient)\n    {\n        this.load = this.load.bind(this);\n        this.contractsListSubject.next(emptyPaginatedView);\n        this.load();\n    }\n\n    get list(): Observable<PaginatedView<ContractDTO>>\n    {\n        return this.list$;\n    }\n\n    public create(dto: ContractCreateUpdateDTO): Observable<ContractCreateUpdateDTO>\n    {\n        return this.contractClient.create(dto).pipe(tap(_ => this.load()));\n    }\n\n    public update(\n        id: Number,\n        dto: ContractCreateUpdateDTO\n    ): Observable<ContractCreateUpdateDTO> {\n        return this.contractClient.update(id, dto).pipe(tap(_ => this.load()));\n    }\n\n    public load(query: Map<string, any>|null = null): void\n    {\n        this.subscriptions.push(this.contractClient.list(query)\n            .subscribe(view => {\n                view.results.forEach(contract => {\n                    contract.contractValue = contract.stages\n                        .map((contractStage) => contractStage.net_value ?? 0)\n                        .reduce((a, b) => a + b, 0);\n                });\n                this.contractsListSubject.next(view);\n            }));\n    }\n}\n","import { Component } from '@angular/core';\nimport { BabelModal } from '../../shared/_directives/modal.component';\n\n@Component({\n    selector: 'app-add-contract',\n    templateUrl: './add-contract.component.html',\n    styleUrls: ['./add-contract.component.sass'],\n})\nexport class AddContractComponent extends BabelModal\n{\n}\n","<div class=\"actions\">\n    <button class=\"btn btn-lg btn-outline-primary\" (click)=\"openModal(add_contract_form)\">+</button>\n</div>\n\n<ng-template #add_contract_form let-dismiss=\"dismiss\">\n    <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"modal-basic-title\">{{ 'contracts.add_contract'|translate }}</h1>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <app-contract-form (closeForm)=\"close()\"></app-contract-form>\n    </div>\n</ng-template>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ConvertibleToQueryParams, QueryParams } from '../../shared/_models/query-string';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { PartnerClient } from '../../partners/_services/partners-client.service';\nimport { SimplifiedPartnerDTO } from '../../partners/_models/DTOs';\nimport { Observable } from 'rxjs';\nimport { FormElementPropertiesMap, StringMap } from './_model/form-to-query';\nimport { ProjectClient } from '../../projects/_services/projects-client.service';\nimport { SimplifiedProjectDTO } from '../../projects/_models/DTOs';\nimport { contractStates } from '../_models/constants';\n\n@Component({\n    selector: 'app-contract-filters',\n    templateUrl: './contract-filters.component.html',\n})\nexport class ContractFiltersComponent implements OnInit\n{\n    @Output() public filters = new EventEmitter<ConvertibleToQueryParams>();\n    public partners: SimplifiedPartnerDTO[] = [];\n    public projects: SimplifiedProjectDTO[] = [];\n    public states = contractStates;\n    public form = new FormGroup({\n        partner: new FormControl(),\n        project: new FormControl(),\n        state: new FormControl()\n    });\n    private queryToName: StringMap = {};\n    private nameToQuery: FormElementPropertiesMap = {\n        partner: {\n            label: 'contracts.partner',\n            query: 'partner__id'\n        },\n        project: {\n            label: 'contracts.project',\n            query: 'project__id'\n        },\n        state: {\n            label: 'contracts.state',\n            query: 'state'\n        }\n    };\n\n    public constructor(\n        private partnerClient: PartnerClient,\n        private projectClient: ProjectClient\n    ) {\n        Object.keys(this.nameToQuery).forEach(\n            formElementName => this.queryToName[this.nameToQuery[formElementName].query] = formElementName\n        );\n    }\n\n    public ngOnInit(): void\n    {\n        this.partnerClient.autocomplete().toPromise()\n            .then(partners => this.partners = partners);\n        this.projectClient.autocomplete().toPromise()\n            .then(projects => this.projects = projects);\n    }\n\n    @Input()\n    set filtersMap(map: Observable<Map<string, any>>)\n    {\n        map.subscribe(map => {\n            const values = this.form.value;\n            Object.keys(this.queryToName).forEach(query => {\n                const formElement = this.queryToName[query];\n                values[formElement] = map.has(query) ? values[formElement] : null\n            });\n            this.form.patchValue(values);\n        });\n    }\n\n    public onSubmit(): void\n    {\n        this.filters.emit(new QueryParams(this.createQueryParams()));\n    }\n\n    private createQueryParams(): Map<string, any>\n    {\n        const result = new Map<string, any>();\n        const values = this.form.value;\n\n        Object.keys(values).forEach(\n            (elementName: string) => {\n                const elementProps = this.nameToQuery[elementName];\n                const elementValue = values[elementName];\n                result.set(\n                    elementProps.query,\n                    elementValue ? {\n                        label: elementProps.label,\n                        value: elementValue,\n                        displayValue: this.getDisplayValue(elementName, elementValue)\n                    }: null\n                )\n            }\n        );\n\n        return result;\n    }\n\n    private getDisplayValue(elementName: string, elementValue: any): string\n    {\n        switch (elementName) {\n            case 'partner':\n                return this.partners.find(element => element.id == elementValue)?.name ?? '';\n            case 'project':\n                return this.projects.find(element => element.id == elementValue)?.name ?? '';\n            case 'state':\n                return this.states[elementValue];\n        }\n\n        return '';\n    }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" xmlns=\"http://www.w3.org/1999/html\">\n    <div class=\"form-group partner-group col-10\">\n        <label for=\"partner\">{{ 'contracts.partner'|translate }}</label>\n        <ng-select id=\"partner\" [items]=\"partners\" bindValue=\"id\" bindLabel=\"name\" formControlName=\"partner\">\n        </ng-select>\n    </div>\n\n    <div class=\"form-group project-group col-10\">\n        <label for=\"project\">{{ 'contracts.project'|translate }}</label>\n        <ng-select id=\"project\" [items]=\"projects\" bindValue=\"id\" bindLabel=\"name\" formControlName=\"project\">\n        </ng-select>\n    </div>\n\n    <div class=\"form-group status-group col-10\">\n        <label for=\"state\">{{ 'contracts.state'|translate }}</label>\n            <select class=\"form-control\" id=\"state\" formControlName=\"state\">\n                <option value=\"\">- Select -</option>\n                <ng-container *ngFor=\"let state of states; let value=index\">\n                    <option [value]=\"value\">{{ state }}</option>\n                </ng-container>\n            </select>\n    </div>\n\n    <input type=\"submit\" [value]=\"'forms.submit_search'|translate\">\n</form>\n","import {\n    FormArray,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n    ContractCreateUpdateDTO,\n    ContractDTO, ContractStageCreateUpdateDTO,\n    ContractStageDTO,\n    NullContractCreateUpdateDTO, NullContractStageDTO, SimplifiedContractDTO,\n} from '../_models/DTOs';\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { ContractClient, ContractStageClient } from '../_services/contract-client.service';\nimport { contractStates, partnerTypes, vatRates } from '../_models/constants';\nimport { SimplifiedPartnerDTO } from '../../partners/_models/DTOs';\nimport { PartnerClient } from '../../partners/_services/partners-client.service';\nimport { ProjectClient } from '../../projects/_services/projects-client.service';\nimport { SimplifiedProjectDTO } from '../../projects/_models/DTOs';\nimport { FormSubmittedNotifier } from '../../shared/_services/form-submitted.service';\nimport { conditionalValidator } from '../../shared/_services/validators';\nimport { ContractStore } from '../_services/contract-store.service';\n\n@Component({\n    selector: 'app-contract-form',\n    templateUrl: './contract-form.component.html',\n    styleUrls: ['./contract-form.component.sass']\n})\nexport class ContractFormComponent\n{\n    @Output('closeForm') private closeFormEventEmitter = new EventEmitter<boolean>();\n    @Input('contract') public contract!: ContractDTO;\n    public form = new FormGroup({\n        number: new FormControl('', [Validators.required]),\n        isConnected: new FormControl(false),\n        connectedContract: new FormControl( null, []),\n        signingDate: new FormControl('', [Validators.required]),\n        closureDate: new FormControl(''),\n        partner: new FormControl(null),\n        partnerType: new FormControl(''),\n        project: new FormControl(null),\n        state: new FormControl('', [Validators.required]),\n        contractStages: new FormArray([])\n    });\n    public vatRatesEnum = vatRates;\n    public contractStatesEnum = contractStates;\n    public partnerTypesEnum = partnerTypes;\n    public selectedPartner!: Number|null;\n    public partners!: SimplifiedPartnerDTO[];\n    public selectedProject!: Number|null;\n    public projects!: SimplifiedProjectDTO[];\n    public contractIsConnected = false;\n    public contracts!: SimplifiedContractDTO[];\n    public connectedContracts!: Number|null;\n\n    constructor(\n        private dateParser: NgbDateParserFormatter,\n        private contractClient: ContractClient,\n        private contractStore: ContractStore,\n        private contractStageClient: ContractStageClient,\n        private partnerClient: PartnerClient,\n        private projectClient: ProjectClient,\n        private formSubmittedNotifier: FormSubmittedNotifier\n    ) {\n        this.addContractStageGroup = this.addContractStageGroup.bind(this);\n        this.closeForm = this.closeForm.bind(this);\n        this.createOrUpdateStage = this.createOrUpdateStage.bind(this);\n        this.contract = this.contract || NullContractCreateUpdateDTO;\n        this.setContractConnectedValidator();\n        this.setPartnerTypeValidator();\n        const promises = [\n            <Promise<any>>this.partnerClient.autocomplete().toPromise()\n                .then(partners => this.partners = partners),\n            <Promise<any>>this.projectClient.autocomplete().toPromise()\n                .then(projects => this.projects = projects),\n            <Promise<any>>this.contractClient.autocomplete().toPromise()\n                .then(contracts => this.contracts = contracts.results ?? [])\n        ];\n        Promise.all(promises).then( _ => {\n            this.selectedPartner = this.contract.partner?.id ?? null;\n            this.selectedProject = this.contract.project?.id ?? null;\n            this.contractIsConnected = this.contract.connected_contract != null;\n            this.connectedContracts = this.contract.connected_contract?.id ?? null;\n            this.form.patchValue({\n                number: this.contract.number,\n                isConnected: this.contract.connected_contract != null,\n                connectedContract: this.contract.connected_contract?.id || null,\n                signingDate: this.dateParser\n                    .parse(this.contract.signing_date.toString()),\n                closureDate: this.dateParser\n                    .parse(this.contract.closure_date.toString()),\n                partner: this.contract.partner?.id || null,\n                partnerType: this.contract.partner_type,\n                project: this.contract.project?.id || null,\n                state: this.contract.state,\n            });\n            (this.contract.stages || []).forEach(this.addContractStageGroup);\n        });\n    }\n\n    public onSubmit(): void\n    {\n        if (this.form.valid) {\n            const contractStages = this.formDataToContractStageDTOs(this.contract.id)\n            this.getContractRequest()\n                .then( _ => Promise.all(contractStages.map(this.createOrUpdateStage)));\n        } else {\n            Object.keys(this.form.controls)\n                .forEach(controlName => this.form.controls[controlName].markAsDirty());\n            this.formSubmittedNotifier.notifyFormSubmission();\n        }\n    }\n\n    get contractStageFormGroups()\n    {\n        return (<FormArray>this.form.get('contractStages')).controls;\n    }\n\n    public addContractStageGroup(dto?: ContractStageDTO): void\n    {\n        dto = dto || NullContractStageDTO;\n        const contractStagesArray = this.form.get('contractStages') as FormArray;\n        const deadline = dto.deadline ?\n            this.dateParser.parse(dto.deadline.toString()) : null;\n\n        contractStagesArray.push(new FormGroup({\n            id: new FormControl(dto.id || ''),\n            title: new FormControl(\n                dto.title || '',\n                [Validators.required]\n            ),\n            deadline: new FormControl(deadline),\n            netValue: new FormControl(dto.net_value, [Validators.required]),\n            vatRate: new FormControl(dto.vat_rate, [Validators.required])\n        }));\n    }\n\n    private setContractConnectedValidator(): void\n    {\n        const connectedContract = this.form.get('connectedContract');\n        const isConnected = this.form.get('isConnected');\n        connectedContract?.setValidators([\n            conditionalValidator(() => isConnected?.value, Validators.required),\n        ]);\n        isConnected?.valueChanges\n            .subscribe( _ => connectedContract?.updateValueAndValidity());\n    }\n\n    private setPartnerTypeValidator(): void\n    {\n        const partner = this.form.get('partner');\n        const partnerType = this.form.get('partnerType');\n        partnerType?.setValidators([\n            conditionalValidator(() => partner?.value, Validators.required),\n        ]);\n        partner?.valueChanges.subscribe( _ => partnerType?.updateValueAndValidity());\n    }\n\n    private formDataToContractDto(): ContractCreateUpdateDTO\n    {\n        const formValues = this.form.value;\n\n        return {\n            id: formValues.id,\n            number: formValues.number,\n            state: formValues.state,\n            connected_contract: this.connectedContracts ?? null,\n            partner: this.selectedPartner ?? null,\n            partner_type: formValues.partnerType,\n            project: this.selectedProject ?? null,\n            signing_date: this.dateParser.format(formValues.signingDate),\n            closure_date: formValues.closureDate ?\n                this.dateParser.format(formValues.closureDate) : null,\n        };\n    }\n\n    private formDataToContractStageDTOs(\n        contractId: Number\n    ): ContractStageCreateUpdateDTO[] {\n        return this.form.value.contractStages.map((stage: any) => ({\n            id: stage.id,\n            title: stage.title,\n            deadline: stage.deadline ?\n                      this.dateParser.format(stage.deadline) : null,\n            net_value: stage.netValue,\n            vat_rate: stage.vatRate,\n            // TODO: Change this.\n            currency: 1,\n            contract: contractId,\n        }));\n    }\n\n    private createOrUpdateStage(contractStage: ContractStageCreateUpdateDTO)\n    {\n        return contractStage.id ?\n               this.contractStageClient.update(contractStage.id, contractStage) :\n               this.contractStageClient.create(contractStage)\n    }\n\n    private getContractRequest(): Promise<void|ContractCreateUpdateDTO>\n    {\n        const dto = this.formDataToContractDto();\n\n        return this.contract.id ?\n            this.contractStore.update(this.contract.id, dto).toPromise().then(this.closeForm) :\n            this.contractStore.create(dto).toPromise().then(this.closeForm);\n    }\n\n    public closeForm()\n    {\n        this.closeFormEventEmitter.emit(true);\n    }\n}\n","<div class=\"wrapper\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" xmlns=\"http://www.w3.org/1999/html\">\n        <div class=\"form-group col-6 p-0\">\n            <label for=\"number\">{{ 'contracts.number'|translate }}: </label>\n            <input class=\"form-control\" id=\"number\" type=\"text\" formControlName=\"number\">\n            <app-form-errors [element]=\"form.get('number')\"></app-form-errors>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"form-group col-6 connected-contract\">\n                <input id=\"is_connected\" type=\"checkbox\" formControlName=\"isConnected\"\n                    [(ngModel)]=\"contractIsConnected\" />\n                <label for=\"is_connected\">{{ 'contracts.is_annex'|translate }} </label>\n            </div>\n            <div class=\"form-group col-6 contract-number\">\n                <ng-container *ngIf=\"contractIsConnected\">\n                    <label for=\"connected_contract\">{{ 'contracts.number'|translate }}: </label>\n                    <ng-select id=\"connected_contract\" [items]=\"contracts\" bindValue=\"id\" bindLabel=\"number\"\n                        placeholder=\"Select contract\" [(ngModel)]=\"connectedContracts\"\n                        formControlName=\"connectedContract\">\n                    </ng-select>\n                    <app-form-errors [element]=\"form.get('connectedContract')\"></app-form-errors>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <label for=\"signing_date\">{{ 'contracts.signing_date'|translate }}: </label>\n                <div class=\"input-group-calendar\">\n                    <div class=\"calendar\" (click)=\"signing_date.toggle()\">\n                        <input id=\"signing_date\" class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"signing_date\"\n                            ngbDatepicker #signing_date=\"ngbDatepicker\" formControlName=\"signingDate\" autoClose=\"true\">\n                        <fa-icon [icon]=\"['far', 'calendar-alt']\"></fa-icon>\n                    </div>\n                </div>\n                <app-form-errors [element]=\"form.get('signingDate')\"></app-form-errors>\n            </div>\n            <div class=\"form-group col-6\">\n                <label for=\"closure_date\">{{ 'contracts.closure_date'|translate }}: </label>\n                <div class=\"input-group-calendar\">\n                    <div class=\"calendar\" (click)=\"closure_date.toggle()\">\n                        <input id=\"closure_date\" class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"closure_date\"\n                            ngbDatepicker #closure_date=\"ngbDatepicker\" formControlName=\"closureDate\">\n                        <fa-icon [icon]=\"['far', 'calendar-alt']\"></fa-icon>\n                    </div>\n                </div>\n                <app-form-errors [element]=\"form.get('closureDate')\"></app-form-errors>\n            </div>\n        </div>\n        <div class=\"row align-items-center\">\n            <div class=\"form-group partner-group col-10\">\n                <label for=\"partner\">{{ 'contracts.partner'|translate }}: </label>\n                <ng-select id=\"partner\" [items]=\"partners\" bindValue=\"id\" bindLabel=\"name\"\n                           placeholder=\"{{ 'contracts.select_partner'|translate }}\"\n                           [(ngModel)]=\"selectedPartner\" formControlName=\"partner\">\n                </ng-select>\n            </div>\n            <div class=\"col-2 text-right pt-3\">\n                <button class=\"btn btn-dark\">{{ 'contracts.add_partner'|translate }}</button>\n            </div>\n\n        </div>\n\n        <div class=\"row\">\n            <ng-container *ngFor=\"let partnerType of partnerTypesEnum; let value=index\">\n                <div class=\"col-3\">\n                    <input id=\"partner-type-{{ value }}\" type=\"radio\" [value]=\"value\" formControlName=\"partnerType\">\n                    <label class=\"px-2\" for=\"partner-type-{{ value }}\">{{ partnerType | translate }}</label>\n                </div>\n            </ng-container>\n            <app-form-errors [element]=\"form.get('partnerType')\"></app-form-errors>\n        </div>\n        <div class=\"\">\n            <label for=\"project\">{{ 'contracts.project'|translate }}: </label>\n            <ng-select class=\"mb-3\" id=\"project\" [items]=\"projects\" bindValue=\"id\" bindLabel=\"name\"\n                       placeholder=\"{{ 'contracts.select_project'|translate }}\"\n                       [(ngModel)]=\"selectedProject\" formControlName=\"project\">\n            </ng-select>\n        </div>\n        <div class=\"form-group form-group-stage\">\n            <label for=\"state\">{{ 'contracts.state'|translate }}: </label>\n            <select class=\"form-control\" id=\"state\" formControlName=\"state\">\n                <option value=\"\">{{ 'contracts.select'|translate }}</option>\n                <ng-container *ngFor=\"let state of contractStatesEnum; let value=index\">\n                    <option [value]=\"value\">{{ state | translate }}</option>\n                </ng-container>\n            </select>\n            <app-form-errors [element]=\"form.get('state')\"></app-form-errors>\n        </div>\n        <ng-container formArrayName=\"contractStages\" class=\"form-group\">\n            <div class=\"form-group-stage mb-3\" *ngFor=\"let contractStage of contractStageFormGroups;let i=index\">\n                <div [formGroupName]=\"i\">\n                    <div class=\"form-group\">\n                        <label for=\"title\">{{ 'contracts.stage.name'|translate }}: </label>\n                        <input class=\"form-control\" name=\"title\" id=\"title\" type=\"text\" formControlName=\"title\" />\n                        <app-form-errors [element]=\"contractStage.get('title')\"></app-form-errors>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col-4\">\n                            <label for=\"deadline\">{{ 'contracts.stage.deadline'|translate }}: </label>\n                            <div class=\"input-group-calendar\">\n                                <div class=\"calendar\" (click)=\"deadline.toggle()\">\n                                    <input id=\"deadline\" class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"deadline\"\n                                        ngbDatepicker #deadline=\"ngbDatepicker\" formControlName=\"deadline\" />\n                                    <fa-icon [icon]=\"['far', 'calendar-alt']\"></fa-icon>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-4\">\n                            <label for=\"netValue\">{{ 'contracts.stage.net_value'|translate }}: </label>\n                            <input class=\"form-control\" id=\"netValue\" type=\"text\" formControlName=\"netValue\" />\n                            <app-form-errors [element]=\"contractStage.get('netValue')\"></app-form-errors>\n                        </div>\n                        <div class=\"form-group col-4\">\n                            <label for=\"vatRate\">{{ 'contracts.stage.vat_rate'|translate }}: </label>\n                            <select class=\"form-control\" id=\"vatRate\" formControlName=\"vatRate\">\n                                <option value=\"\">{{ 'contracts.select'|translate }}</option>\n                                <ng-container *ngFor=\"let vatRate of vatRatesEnum\">\n                                    <option [value]=\"vatRate\">{{ vatRate }} %</option>\n                                </ng-container>\n                            </select>\n                            <app-form-errors [element]=\"contractStage.get('vatRate')\"></app-form-errors>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <div class=\"pb-5\">\n            <button class=\"btn btn-stage p-0\" name=\"add-contract\" type=\"button\" (click)=\"addContractStageGroup()\">\n                <fa-icon class=\"px-1\" [icon]=\"['fas', 'plus-circle']\"></fa-icon>{{ 'contracts.stage.add_another'|translate }}\n            </button>\n        </div>\n\n        <button class=\"btn btn-dark mt-3 float-right\" type=\"submit\">{{ 'forms.save'|translate }}</button>\n        <button class=\"btn btn-light mt-3 float-right\" type=\"button\" (click)=\"closeForm()\">{{ 'forms.cancel'|translate }}</button>\n    </form>\n</div>\n","import { Component, OnDestroy } from '@angular/core';\nimport { contractStates } from '../_models/constants';\nimport { ContractStore } from '../_services/contract-store.service';\nimport { Observable, Subject } from 'rxjs';\nimport { PaginatedView } from '../../../models/paginated_view';\nimport { ContractDTO } from '../_models/DTOs';\nimport { ConvertibleToQueryParams, QueryParams } from '../../shared/_models/query-string';\n\n@Component({\n    selector: 'app-contracts-list',\n    templateUrl: './contracts-list.component.html',\n    styleUrls: ['./contracts-list.component.sass'],\n})\nexport class ContractsListComponent\n{\n    public contractStatesEnum = contractStates;\n    public queryParams = new Map<string, any>();\n    private goToFirstPageSubject = new Subject<boolean>();\n    public goToFirstPage$ = this.goToFirstPageSubject.asObservable();\n    private closeModalSubject = new Subject<boolean>();\n    public closeModal$ = this.closeModalSubject.asObservable();\n    private queryParamsSubject = new Subject<Map<string, any>>();\n    public queryParams$ = this.queryParamsSubject.asObservable();\n\n    constructor(private contractsStore: ContractStore) {}\n\n    public get contracts$(): Observable<PaginatedView<ContractDTO>>\n    {\n        return this.contractsStore.list;\n    }\n\n\n    public removeFilter(filterName: string): void\n    {\n        this.reloadList(new QueryParams(new Map([[filterName, null]])));\n    }\n\n    public reloadList(\n        convertibleToQuery: ConvertibleToQueryParams,\n        goToFirstPage: boolean = false\n    ) {\n        convertibleToQuery.toQueryParams().forEach(\n            (param, paramName) => param !== null ?\n                  this.queryParams.set(paramName, param) :\n                  this.queryParams.delete(paramName)\n        );\n\n        if (goToFirstPage) {\n            this.goToFirstPageSubject.next(true);\n            this.queryParams.set('page', 1);\n        }\n\n        const simpleQueryParams = new Map<string, any>();\n        this.queryParams.forEach((value, key) => {\n            simpleQueryParams.set(key, value.hasOwnProperty('value') ? value.value : value);\n        })\n\n        this.closeModalSubject.next(true);\n        this.contractsStore.load(simpleQueryParams);\n        this.queryParamsSubject.next(this.queryParams);\n        this.goToFirstPageSubject.next(false);\n        this.closeModalSubject.next(false);\n    }\n}\n","<div>\n    <app-add-contract></app-add-contract>\n    <div>\n        <ng-container *ngFor=\"let queryParam of queryParams | keyvalue\">\n            <span *ngIf=\"queryParam.value.hasOwnProperty('label')\" (click)=\"removeFilter(queryParam.key)\">\n                {{queryParam.value.label}}: {{queryParam.value.displayValue}}\n                <fa-icon [icon]=\"['fas', 'times']\"></fa-icon>\n            </span>\n        </ng-container>\n    </div>\n    <app-search-filter [filterName]=\"'search'\" (filterChange)=\"reloadList($event, true)\"\n        [label]=\"'forms.search'|translate\">\n    </app-search-filter>\n\n    <app-modal [buttonIcon]=\"['fas', 'sliders-h']\" [title]=\"'contracts.filter.advanced'|translate\"\n        [shouldClose]=\"closeModal$\">\n        <app-contract-filters (filters)=\"reloadList($event, true)\" [filtersMap]=\"queryParams$\">\n        </app-contract-filters>\n    </app-modal>\n</div>\n<div class=\"table-container\">\n    <table class=\"table table-striped\">\n        <thead>\n            <tr>\n                <th scope=\"col\">{{ 'contracts.number'|translate }}</th>\n                <th scope=\"col\">{{ 'contracts.state'|translate }}</th>\n                <th scope=\"col\">{{ 'contracts.partner'|translate }}</th>\n                <th scope=\"col\">{{ 'contracts.signing_date'|translate }}</th>\n                <th scope=\"col\">{{ 'contracts.related_project'|translate }}</th>\n                <th scope=\"col\">{{ 'contracts.stages'|translate }}</th>\n                <th scope=\"col\">{{ 'contracts.due_date'|translate }}</th>\n                <th scope=\"col\">{{ 'contracts.value'|translate }}</th>\n                <th scope=\"col\">{{ 'contracts.actions'|translate }}</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let contract of (contracts$ | async)?.results\">\n                <td>{{ contract.number }}</td>\n                <td>{{ contractStatesEnum[contract.state]|translate }}</td>\n                <td>{{ contract.partner.name }}</td>\n                <td>{{ contract.signing_date | date:'mediumDate' }}</td>\n                <td>{{ contract.project?.name }}</td>\n                <td>\n                    <ul class=\"p-0 m-0 list-stages\">\n                        <li></li>\n                        <li *ngFor=\"let stage of contract.stages\">{{ stage.title }}</li>\n                    </ul>\n                </td>\n                <td>\n                    <ul class=\"p-0 m-0 list-stages\">\n                        <li>{{ contract.closure_date | date:'mediumDate' }}</li>\n                        <li *ngFor=\"let stage of contract.stages\">{{ stage.deadline | date:'mediumDate' }}</li>\n                    </ul>\n                </td>\n                <td>\n                    <ul class=\"p-0 m-0 list-stages\">\n                        <li>{{ contract.contractValue != 0 ? contract.contractValue : 'N/A'}}</li>\n                        <li *ngFor=\"let stage of contract.stages\">{{ stage.net_value }}</li>\n                    </ul>\n                </td>\n                <td>\n                    <app-update-contract [contract]=\"contract\"></app-update-contract>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <app-pagination [view]=\"contracts$\" (paginationChange)=\"reloadList($event)\" [goToFirstPage]=\"goToFirstPage$\">\n    </app-pagination>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContractsListComponent } from './contracts-list/contracts-list.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { translationServiceConfig } from '../../config/i18n.config';\nimport { AddContractComponent } from './add-contract/add-contract.component';\nimport { ContractFormComponent } from './contract-form/contract-form.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UpdateContractComponent } from './update-contract/update-contract.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SharedModule } from '../shared/shared.module';\nimport { IconsModule } from '../icons/icons.module';\nimport { ContractFiltersComponent } from './contract-filters/contract-filters.component';\n\n@NgModule({\n    declarations: [\n        ContractsListComponent,\n        AddContractComponent,\n        UpdateContractComponent,\n        ContractFormComponent,\n        ContractFiltersComponent\n    ],\n    imports: [\n        CommonModule,\n        TranslateModule.forRoot(translationServiceConfig),\n        ReactiveFormsModule,\n        NgbDatepickerModule,\n        NgSelectModule,\n        FormsModule,\n        SharedModule,\n        IconsModule\n    ],\n    exports: [\n        ContractsListComponent,\n    ],\n})\nexport class ContractsModule {}\n","import { Component, Input } from '@angular/core';\nimport { ContractDTO } from '../_models/DTOs';\nimport { BabelModal } from '../../shared/_directives/modal.component';\n\n@Component({\n    selector: 'app-update-contract',\n    templateUrl: './update-contract.component.html',\n    styleUrls: ['./update-contract.component.sass'],\n})\nexport class UpdateContractComponent extends BabelModal\n{\n    @Input('contract') contract!: ContractDTO;\n}\n","<div class=\"actions\">\n    <button class=\"btn\" (click)=\"openModal(update_contract_form)\">\n        <fa-icon [icon]=\"['fas', 'pencil-alt']\"></fa-icon>\n    </button>\n</div>\n\n<ng-template #update_contract_form let-dismiss=\"dismiss\">\n    <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"modal-basic-title\">{{ 'contracts.update_contract' | translate }}</h1>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <app-contract-form (closeForm)=\"close()\" [contract]=\"contract\"></app-contract-form>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { AuthModule } from \"../auth/auth.module\";\n\n@NgModule({\n    declarations: [\n        HomepageComponent\n    ],\n    imports: [\n        CommonModule,\n        AuthModule\n    ]\n})\nexport class DashboardModule\n{\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-homepage',\n    templateUrl: './homepage.component.html',\n    styleUrls: ['./homepage.component.sass']\n})\nexport class HomepageComponent\n{\n}\n","<div class=\"content\" role=\"main\">\n  <div class=\"\">\n    <h1>Dashboard</h1>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { faUserCircle, faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\nimport { FaIconLibrary, FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faPlusCircle, faPencilAlt, faTimes, faSlidersH } from '@fortawesome/free-solid-svg-icons';\n\n@NgModule({\n    imports: [FontAwesomeModule],\n    exports: [FontAwesomeModule]\n})\nexport class IconsModule\n{\n    constructor(library: FaIconLibrary)\n    {\n        library.addIcons(\n            faUserCircle,\n            faCalendarAlt,\n            faPlusCircle,\n            faPencilAlt,\n            faSlidersH,\n            faTimes\n        );\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { emptyPaginatedView, PaginatedView } from 'src/app/models/paginated_view';\nimport { environment } from 'src/environments/environment';\nimport { InvoiceDTO } from '../_models/DTOs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceClient {\n\n  private INVOICES_URL = environment.babelUrl + 'budget/invoices';\n\n  constructor(private httpClient: HttpClient) { }\n\n  public list(query: Map<string, any>|null): Observable<PaginatedView<InvoiceDTO>> \n  {\n    let url = this.INVOICES_URL;\n    if (query && query.size > 0) {\n      let queryTerms: string[] = [];\n      query.forEach((value: any, queryParamName: string) => queryTerms.push(queryParamName + '=' + value));\n      url += '?' + queryTerms.join('&');\n    }\n    return this.httpClient.get<PaginatedView<InvoiceDTO>>(url).pipe(catchError(_ => of(emptyPaginatedView)));\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { emptyPaginatedView, PaginatedView } from 'src/app/models/paginated_view';\nimport { InvoiceDTO } from '../_models/DTOs';\nimport { InvoiceClient } from './invoice-client.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceStore \n{\n  private invoicesListSubject = new Subject<PaginatedView<InvoiceDTO>>();\n  private list$ = this.invoicesListSubject.asObservable();\n  private subscriptions: Subscription[] = [];\n\n  constructor(private invoiceClient: InvoiceClient) \n  { \n    this.load = this.load.bind(this);\n    this.invoicesListSubject.next(emptyPaginatedView);\n    this.load();\n  }\n\n  get list(): Observable<PaginatedView<InvoiceDTO>>\n  {\n    return this.list$;\n  }\n\n  public load(query: Map<string, any>|null = null): void\n    {\n        this.subscriptions.push(this.invoiceClient.list(query)\n            .subscribe(view => {\n                this.invoicesListSubject.next(view);\n            }));\n    }\n}\n","<div class=\"table-container\">\n    <table class=\"table table-striped\">\n        <thead>\n            <tr>\n                <th scope=\"col\">something</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let invoice of (invoices$ | async)?.results\">\n                <td>{{ invoice }}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PaginatedView } from 'src/app/models/paginated_view';\nimport { InvoiceDTO } from '../_models/DTOs';\nimport { InvoiceStore } from '../_services/invoice-store.service';\n\n@Component({\n  selector: 'app-invoices-list',\n  templateUrl: './invoices-list.component.html',\n  styleUrls: ['./invoices-list.component.sass']\n})\nexport class InvoicesListComponent  {\n\n  constructor(private invoicesStore: InvoiceStore) { }\n\n  public get invoices$(): Observable<PaginatedView<InvoiceDTO>>\n  {\n    return this.invoicesStore.list;\n  }\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../../environments/environment.local';\nimport { SimplifiedPartnerDTO } from '../_models/DTOs';\nimport { Injectable } from '@angular/core';\n\n@Injectable({providedIn: \"root\"})\nexport class PartnerClient\n{\n    static PARTNERS_URL = environment.babelUrl + 'budget/partners/';\n\n    constructor(private httpClient: HttpClient) {}\n\n    public autocomplete(): Observable<SimplifiedPartnerDTO[]>\n    {\n        return this.httpClient.get<SimplifiedPartnerDTO[]>(PartnerClient.PARTNERS_URL)\n            .pipe(catchError(_ => of([])),);\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../../environments/environment.local';\nimport { Injectable } from '@angular/core';\nimport { SimplifiedProjectDTO } from '../_models/DTOs';\n\n@Injectable({providedIn: \"root\"})\nexport class ProjectClient\n{\n    static PROJECT_URL = environment.babelUrl + 'budget/projects/';\n\n    constructor(private httpClient: HttpClient) {}\n\n    public autocomplete(): Observable<SimplifiedProjectDTO[]>\n    {\n        return this.httpClient.get<SimplifiedProjectDTO[]>(ProjectClient.PROJECT_URL)\n            .pipe(catchError(_ => of([])),);\n    }\n}\n","import { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Directive } from '@angular/core';\n\n@Directive({selector: 'app-modal'})\nexport class BabelModal\n{\n    private modalRef!: NgbModalRef;\n\n    public constructor(private modalService: NgbModal) {}\n\n    openModal(content: any): void\n    {\n        this.modalRef = this.modalService.open(content);\n    }\n\n    close(): void\n    {\n        this.modalRef.close();\n    }\n}\n","export interface ConvertibleToQueryParams\n{\n    toQueryParams(): Map<string, any>;\n}\n\nexport class QueryParams implements ConvertibleToQueryParams\n{\n    constructor(private params: Map<string, any>) { }\n\n    public toQueryParams(): Map<string, any>\n    {\n        return this.params;\n    }\n}\n","import { Subject, Subscription } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable({providedIn: \"root\"})\nexport class FormSubmittedNotifier\n{\n    private isSubmittedSubject = new Subject<boolean>();\n    private isSubmitted$ = this.isSubmittedSubject.asObservable();\n\n    public constructor()\n    {\n        this.isSubmittedSubject.next(false);\n    }\n\n    public notifyFormSubmission(): void\n    {\n        this.isSubmittedSubject.next(true)\n    }\n\n    public subscribe(\n        next?: (value: boolean) => void,\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription {\n        return this.isSubmitted$.subscribe(next, error, complete);\n    }\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport const conditionalValidator = (\n    predicate: () => boolean,\n    validator: ValidatorFn\n): ValidatorFn => (\n        formControl: AbstractControl\n    ): ValidationErrors|null => predicate() ? validator(formControl) : null;","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { FormSubmittedNotifier } from '../_services/form-submitted.service';\n\n@Component({\n    selector: 'app-form-errors',\n    templateUrl: './form-errors.component.html',\n})\nexport class FormErrorsComponent implements OnInit, OnDestroy\n{\n    static formErrors = new Map<string, string>()\n        .set('required', 'This field is required');\n\n    @Input('element') public element!: AbstractControl|null|undefined;\n    private errorsSubject = new Subject<string[]>();\n    public readonly errors$: Observable<string[]> = this.errorsSubject.asObservable();\n    private subscribers: (Subscription|null)[] = [];\n\n    public constructor(private formSubmittedNotifier: FormSubmittedNotifier) {}\n\n    public ngOnInit()\n    {\n        if (this.element) {\n            this.subscribers.push(this.formSubmittedNotifier.subscribe((isSubmitted: boolean) => {\n                if (!isSubmitted) {\n                    return;\n                }\n                this.errorsSubject.next([]);\n                if (this.element && this.element.errors) {\n                    this.errorsSubject.next(this.errorsList);\n                }\n            }));\n            this.subscribers.push(this.element.statusChanges.subscribe(_ => {\n                this.errorsSubject.next([]);\n                if (this.element && this.element.errors && this.element.dirty) {\n                    this.errorsSubject.next(this.errorsList);\n                }\n            }));\n        }\n    }\n\n    public ngOnDestroy(): void\n    {\n        this.subscribers.forEach(subscription => subscription?.unsubscribe());\n    }\n\n    get errorsList(): string[]\n    {\n        return Object.keys(this.element?.errors || [])\n            .filter((validator: string) => this.element?.errors && this.element.errors[validator])\n            .map((validator: string) => FormErrorsComponent.formErrors.get(validator) ?? 'Invalid');\n    }\n}\n","<ng-container *ngFor=\"let error of (errors$|async)\">\n    <span>{{ error }}</span>\n</ng-container>\n","<button class=\"btn\" (click)=\"openModal(content)\">\n    <fa-icon *ngIf=\"buttonIcon\" [icon]=\"buttonIcon\"></fa-icon>\n    <ng-container *ngIf=\"buttonText\">{{ buttonText }}</ng-container>\n</button>\n<ng-template #content let-dismiss=\"dismiss\">\n    <div class=\"modal-header\">\n    <h1 class=\"modal-title\" id=\"modal-basic-title\">{{ title }}</h1>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n    </div>\n    <div class=\"modal-body\">\n        <ng-content></ng-content>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-modal',\n    templateUrl: './modal.component.html',\n})\nexport class ModalComponent\n{\n    @Input() public buttonText!: string;\n    @Input() public buttonIcon!: IconProp;\n    @Input() public title!: string;\n    private modalRef!: NgbModalRef;\n\n    public constructor(private modalService: NgbModal) {}\n\n    @Input() set shouldClose(shouldClose: Observable<boolean>)\n    {\n        shouldClose.subscribe(shouldCloseModal => shouldCloseModal && this.close());\n    }\n\n    openModal(content: any): void\n    {\n        this.modalRef = this.modalService.open(content);\n    }\n\n    close(): void\n    {\n        this.modalRef.close();\n    }\n}\n","import { ConvertibleToQueryParams } from '../../_models/query-string';\n\nexport const pageSizes = [10, 20, 30, 50, 100];\nexport const defaultPageSize = 10;\n\nexport class Pagination implements ConvertibleToQueryParams\n{\n    private _pageSize: number|null = defaultPageSize;\n    private _page: number = 1;\n    private _nextPage: number|null = null;\n    private _prevPage: number|null = null;\n\n    public get page(): number\n    {\n        return this._page;\n    }\n\n    public get pageSize(): number|null\n    {\n        return this._pageSize;\n    }\n\n    public set page(page: number)\n    {\n        this._page = page;\n    }\n\n    public set pageSize(pageSize: number|null)\n    {\n        this._pageSize = pageSize;\n    }\n\n    public get nextPage(): number | null\n    {\n        return this._nextPage;\n    }\n\n    public set nextPage(value: number | null)\n    {\n        this._nextPage = value;\n    }\n\n    public get prevPage(): number | null\n    {\n        return this._prevPage;\n    }\n\n    public set prevPage(value: number | null)\n    {\n        this._prevPage = value;\n    }\n\n    public processQueryParameters(query: Map<string, any>): void\n    {\n        if (this._page) {\n            query.set('page', this._page);\n        }\n        if (this._pageSize) {\n            query.set('page_size', this._pageSize);\n        }\n    }\n\n    public toQueryParams(): Map<string, any>\n    {\n        return new Map<string, any>([['page', this._page], ['page_size', this._pageSize]]);\n    }\n\n    public toRemovableQueryParams(): Map<string, { label: string; value: any }>\n    {\n        return new Map();\n    }\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { pageSizes, Pagination } from './_model/pagination';\nimport { Observable, Subscription } from 'rxjs';\nimport { PaginatedView } from '../../../models/paginated_view';\n\n@Component({\n    selector: 'app-pagination',\n    templateUrl: './pagination.component.html',\n})\nexport class PaginationComponent implements OnInit, OnDestroy\n{\n    @Output('paginationChange') private paginationEmitter: EventEmitter<Pagination> = new EventEmitter();\n    @Input('view') public view$!: Observable<PaginatedView<any>>;\n    @Input('goToFirstPage') public goToFirstPage$!: Observable<boolean>;\n    public pagination: Pagination = new Pagination();\n    public pageSizesEnum = pageSizes;\n    private subscriptions:Subscription[] = [];\n\n    public ngOnInit()\n    {\n        this.subscriptions.push(\n            this.view$.subscribe(paginatedView => {\n            this.pagination.prevPage = paginatedView.previous ? this.pagination.page - 1 : null;\n            this.pagination.nextPage = paginatedView.next ? this.pagination.page + 1 : null;\n        }));\n        this.subscriptions.push(\n            this.goToFirstPage$.subscribe(\n                goToFirstPage => this.pagination.page = goToFirstPage ? 1 : this.pagination.page\n            )\n        );\n    }\n\n    public ngOnDestroy(): void\n    {\n        this.subscriptions.forEach(subscription => !subscription.closed && subscription.unsubscribe());\n    }\n\n    public onPageSizeChange(pageSize: number|null)\n    {\n        this.pagination.pageSize = pageSize;\n        this.paginationEmitter.emit(this.pagination);\n    }\n\n    public onPageChange(page: number)\n    {\n        this.pagination.page = page;\n        this.paginationEmitter.emit(this.pagination);\n    }\n}\n","<div>\n    <div>\n        <label for=\"rows-on-page\">Rows per page</label>\n        <select id=\"rows-on-page\" [ngModel]=\"pagination?.pageSize\" (ngModelChange)=\"onPageSizeChange($event)\">\n            <ng-container *ngFor=\"let pageSize of pageSizesEnum\">\n                <option [value]=\"pageSize\">{{ pageSize }}</option>\n            </ng-container>\n        </select>\n    </div>\n    <div>\n        <button (click)=\"onPageChange(pagination?.prevPage ?? 1)\" [disabled]=\"!pagination?.prevPage\"><</button>\n        {{ pagination?.page ?? 1 }}\n        <button (click)=\"onPageChange(pagination?.nextPage ?? 1)\" [disabled]=\"!pagination?.nextPage\">></button>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ConvertibleToQueryParams } from '../_models/query-string';\n\n@Component({\n    selector: 'app-search-filter',\n    templateUrl: './search-filter.component.html',\n})\nexport class SearchFilterComponent implements ConvertibleToQueryParams\n{\n    @Input() filterName!: string;\n    @Output() filterChange = new EventEmitter<ConvertibleToQueryParams>();\n    public searchValue!: string;\n    public inputId!: string;\n    private _label!: string;\n\n    @Input() set label(label: string)\n    {\n        this._label = label;\n        if (label) {\n            this.inputId = label.replace(/[^0-9a-z]/gi, '-').toLowerCase();\n        }\n    }\n\n    get label(): string\n    {\n        return this._label\n    }\n\n    public onSearch()\n    {\n        this.filterChange.emit(this);\n    }\n\n    public toQueryParams(): Map<string, any>\n    {\n        return new Map<string, any>([[this.filterName, this.searchValue]]);\n    }\n\n    public toRemovableQueryParams(): Map<string, { label: string; value: any }>\n    {\n        return new Map();\n    }\n}\n","<label [htmlFor]=\"inputId\">{{ label }}</label>\n<input type=\"text\" [id]=\"inputId\" [(ngModel)]=\"searchValue\" (keyup)=\"onSearch()\"/>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormErrorsComponent } from './form-errors/form-errors.component';\nimport { BabelModal } from './_directives/modal.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { FormsModule } from '@angular/forms';\nimport { SearchFilterComponent } from './search-filter/search-filter.component';\nimport { ModalComponent } from './modal/modal.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n    declarations: [\n        FormErrorsComponent,\n        BabelModal,\n        PaginationComponent,\n        SearchFilterComponent,\n        ModalComponent\n    ],\n    exports: [\n        FormErrorsComponent,\n        BabelModal,\n        PaginationComponent,\n        SearchFilterComponent,\n        ModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        FontAwesomeModule,\n    ],\n})\nexport class SharedModule\n{\n}\n","import { Injectable } from \"@angular/core\";\nimport { OAuthResourceServerErrorHandler, OAuthService, TokenResponse } from \"angular-oauth2-oidc\";\nimport { authCodeFlowConfig } from \"../config/auth.config\";\nimport { filter } from \"rxjs/operators\";\nimport { BehaviorSubject, Observable, of, throwError } from \"rxjs\";\nimport { HttpResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthorizationService\n{\n    readonly isUserLoggedInObservable: Observable<boolean>;\n    private _isUserLoggedInSubject: BehaviorSubject<boolean>;\n\n    constructor(private oauthService: OAuthService, private router: Router)\n    {\n        this.oauthService.configure(authCodeFlowConfig);\n        const isLogged = this.oauthService.hasValidIdToken() && this.oauthService.hasValidAccessToken();\n        this._isUserLoggedInSubject = new BehaviorSubject<boolean>(isLogged);\n        this.isUserLoggedInObservable = this._isUserLoggedInSubject.asObservable();\n\n        this.oauthService.setupAutomaticSilentRefresh();\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'token_received'))\n            .subscribe(e => this.setIsUserLoggedIn = true);\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'logout'))\n            .subscribe(e => this.setIsUserLoggedIn = false);\n    }\n\n    private set setIsUserLoggedIn(isLoggedIn: boolean)\n    {\n        this._isUserLoggedInSubject.next(isLoggedIn);\n    }\n\n    public login(): void\n    {\n        this.oauthService.loadDiscoveryDocumentAndLogin();\n    }\n\n    public logout(): void\n    {\n        this.oauthService.logOut(true);\n        this.router.navigateByUrl('');\n    }\n\n    public refreshToken(): Promise<TokenResponse>\n    {\n        return this.oauthService.loadDiscoveryDocument()\n            .then(_ => this.oauthService.refreshToken());\n    }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ClientRequestErrorHandler implements OAuthResourceServerErrorHandler\n{\n    public handleError(err: HttpResponse<any>): Observable<any>\n    {\n        console.error(err);\n\n        return throwError(err);\n    }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\n\nexport function HttpLoaderFactory(http: HttpClient)\n{\n    return new TranslateHttpLoader(http);\n}\n","import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AuthorizationService } from '../authorization';\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: \"root\" })\nexport class IsAuthenticatedGuard implements CanActivate\n{\n    private readonly isAuthenticated: Observable<boolean | UrlTree>;\n    private isAuthenticatedSubjectObservable: BehaviorSubject<boolean | UrlTree>\n\n    constructor(private authService: AuthorizationService, private router: Router)\n    {\n        this.isAuthenticatedSubjectObservable = new BehaviorSubject<boolean | UrlTree>(false);\n        this.isAuthenticated = this.isAuthenticatedSubjectObservable.asObservable();\n\n        this.authService.isUserLoggedInObservable.subscribe((next: boolean) => {\n            this.isAuthenticatedSubjectObservable.next(next || router.parseUrl(''));\n        });\n    }\n\n    public canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        return this.isAuthenticated;\n    }\n}\n","export const environment = {\n    production: true,\n    gatekeeperUrl: 'http://localhost:8001/',\n    babelUrl: 'http://localhost:8002/',\n    defaultLanguage: 'ro',\n    defaultLocale: 'ro-RO'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}